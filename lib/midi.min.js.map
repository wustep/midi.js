{"version":3,"sources":["webpack://MIDI/webpack/universalModuleDefinition","webpack://MIDI/webpack/bootstrap","webpack://MIDI/./src/root.js","webpack://MIDI/./src/index.js","webpack://MIDI/./src/loader.js","webpack://MIDI/./src/utils/index.js","webpack://MIDI/./src/utils/audio-detect.js","webpack://MIDI/./src/utils/load-script.js","webpack://MIDI/./src/utils/request.js","webpack://MIDI/./src/gm.js","webpack://MIDI/./src/player.js","webpack://MIDI/./src/jasmid/index.js","webpack://MIDI/./src/jasmid/midifile.js","webpack://MIDI/./src/jasmid/_stream.js","webpack://MIDI/./src/jasmid/replayer.js","webpack://MIDI/./src/plugins/index.js","webpack://MIDI/./src/plugins/audiotag.js","webpack://MIDI/./src/plugins/webaudio.js","webpack://MIDI/./src/plugins/webmidi.js"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","MIDI","Soundfont","DEBUG","USE_XHR","soundfontUrl","loadPlugin","opts","onsuccess","audioDetect","supports","audioFormat","hash","location","api","substr","webmidi","AudioContext","Audio","connect","targetFormat","__api","__audioFormat","loadResource","instruments","instrument","length","GM","byId","id","format","WebMIDI","audiotag","requestQueue","webaudio","context","onprogress","onerror","pending","waitForEnd","instrumentId","sendRequest","evt","progress","soundfontPath","request","url","event","responseText","script","document","createElement","language","type","text","body","appendChild","loadScript","add","verify","setDefaultPlugin","midi","canPlayThrough","src","audio","mime","split","setAttribute","addEventListener","removeChild","navigator","requestMIDIAccess","Function","toString","indexOf","plugins","webkitAudioContext","canPlayType","vorbis","mpeg","time","Date","getTime","interval","setInterval","now","clearInterval","_globalExists","path","parts","join","e","LoadScript","this","loaded","loading","config","that","urls","doc","getElementsByTagName","testElement","element","test","getNext","hasError","batchTest","addElement","push","onreadystatechange","readyState","onload","removeTest","ret","onLoad","istrue","strictOrder","error","setTimeout","ID","data","method","headers","responseType","withCredentials","xhr","XMLHttpRequest","open","setRequestHeader","overrideMimeType","upload","total","totalBytes","lengthComputable","rawBytes","parseInt","getResponseHeader","isFinite","status","res","target","responseXML","JSON","parse","response","err","send","map","clean","replace","toLowerCase","byName","byCategory","list","num","number","category","getInstrument","channelId","channel","channels","setInstrument","program","delay","getMono","mono","setMono","truthy","getOmni","omni","setOmni","getSolo","solo","setSolo","pitchBend","mute","keyToNote","noteToKey","number2key","Player","player","currentTime","endTime","restart","playing","timeWarp","startDelay","BPM","start","resume","startAudio","pause","tmp","stopAudio","stop","addListener","onMidiEvent","removeListener","undefined","clearAnimation","animationFrameId","cancelAnimationFrame","setAnimation","callback","tOurTime","tTheirTime","requestAnimationFrame","frame","minutes","t1","t2","end","events","noteRegistrar","loadMidiFile","replayer","Replayer","MidiFile","currentData","getData","getLength","console","loadFile","file","atob","fetch","ff","mx","scc","String","fromCharCode","z","charCodeAt","getFileInstruments","programs","subtype","programNumber","queuedTime","__now","eventQueue","startTime","scheduleTracking","note","offset","message","velocity","shift","getContext","WebAudio","ctx","totalTime","fromCache","messages","foffset","performance","obj","queueTime","setController","controllerType","programChange","noteNumber","MIDIOffset","source","noteOn","noteOff","pop","clearTimeout","disconnect","lastEventTypeByte","readChunk","stream","read","readInt32","readEvent","deltaTime","readVarInt","eventTypeByte","readInt8","Error","subtypeByte","readInt16","microsecondsPerBeat","hourByte","frameRate","0","hour","min","sec","subframe","numerator","denominator","Math","pow","metronome","thirtyseconds","scale","param1","eventType","amount","headerChunk","ticksPerBeat","headerStream","formatType","trackCount","timeDivision","header","tracks","trackChunk","trackStream","eof","str","position","signed","result","b","midiFile","eventProcessor","bpm","midiEvent","trackStates","beatsPerMinute","bpmOverride","getNextEvent","ticksToNextEvent","nextEventTrack","nextEventIndex","nextEvent","temporal","processNext","secondsToGenerate","ticksToEvent","clone","AudioTag","volume","bufferNid","audioBuffers","notesOn","notes","nid","playChannel","instrumentNoteId","log","play","stopChannel","len","cId","setVolume","chordOn","chord","idx","chordOff","stopAllNotes","sources","effects","masterVolume","noteId","buffer","createBufferSource","chain","input","gain","destination","playbackRate","gainNode","createGain","max","linearRampToValueAtTime","sid","setEffects","tunajs","effect","setContext","newCtx","Tuna","bufferPending","requestAudio","soundfont","index","base64","binaryString","bytes","Uint8Array","base64ToArrayBuffer","decodeAudioData","loadAudio","isLoaded","output","cancel","errFunction","then","access","pluginOutputs","outputs"],"mappings":"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","file":"midi.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"MIDI\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"MIDI\"] = factory();\n\telse\n\t\troot[\"MIDI\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n","export default {}\n","import root from './root'\nimport './loader'\nimport './gm'\nimport './player'\nimport './plugins'\n\nwindow.MIDI = root\nexport default root\n","/*\n  ----------------------------------------------------------\n  root.Plugin : 0.3.4 : 2015-03-26\n  ----------------------------------------------------------\n  https://github.com/mudcube/root.js\n  ----------------------------------------------------------\n  Inspired by javax.sound.midi (albeit a super simple version):\n    http://docs.oracle.com/javase/6/docs/api/javax/sound/midi/package-summary.html\n  ----------------------------------------------------------\n  Technologies\n  ----------------------------------------------------------\n    Web MIDI API - no native support yet (jazzplugin)\n    Web Audio API - firefox 25+, chrome 10+, safari 6+, opera 15+\n    HTML5 Audio Tag - ie 9+, firefox 3.5+, chrome 4+, safari 4+, opera 9.5+, ios 4+, android 2.3+\n  ----------------------------------------------------------\n*/\n\nimport { audioDetect, loadScript, request } from './utils'\nimport root from './root'\n\nroot.Soundfont = {}\nroot.DEBUG = true\nroot.USE_XHR = true\nroot.soundfontUrl = './soundfont/'\n\n/*\n  root.loadPlugin({\n    onsuccess: function() { },\n    onprogress: function(state, percent) { },\n    targetFormat: 'mp3', // optionally can force to use MP3 (for instance on mobile networks)\n    instrument: 'acoustic_grand_piano', // or 1 (default)\n    instruments: [ 'acoustic_grand_piano', 'acoustic_guitar_nylon' ] // or multiple instruments\n  })\n*/\n\nroot.loadPlugin = function (opts) {\n  if (typeof opts === 'function') {\n    opts = {onsuccess: opts}\n  }\n\n  root.soundfontUrl = opts.soundfontUrl || root.soundfontUrl\n\n  // / Detect the best type of audio to use\n  audioDetect(function (supports) {\n    var hash = window.location.hash\n    var api = ''\n\n    // / use the most appropriate plugin if not specified\n    if (supports[opts.api]) {\n      api = opts.api\n    } else if (supports[hash.substr(1)]) {\n      api = hash.substr(1)\n    } else if (supports.webmidi) {\n      api = 'webmidi'\n    } else if (window.AudioContext) { // Chrome\n      api = 'webaudio'\n    } else if (window.Audio) { // Firefox\n      api = 'audiotag'\n    }\n\n    if (connect[api]) {\n      // / use audio/ogg when supported\n      let audioFormat\n      if (opts.targetFormat) {\n        audioFormat = opts.targetFormat\n      } else { // use best quality\n        audioFormat = supports['audio/ogg'] ? 'ogg' : 'mp3'\n      }\n\n      // / load the specified plugin\n      root.__api = api\n      root.__audioFormat = audioFormat\n      root.supports = supports\n      root.loadResource(opts)\n    }\n  })\n}\n\n/*\n  root.loadResource({\n    onsuccess: function() { },\n    onprogress: function(state, percent) { },\n    instrument: 'banjo'\n  })\n*/\n\nroot.loadResource = function (opts) {\n  var instruments = opts.instruments || opts.instrument || 'acoustic_grand_piano'\n  // /\n  if (typeof instruments !== 'object') {\n    if (instruments || instruments === 0) {\n      instruments = [instruments]\n    } else {\n      instruments = []\n    }\n  }\n  // / convert numeric ids into strings\n  for (var i = 0; i < instruments.length; i++) {\n    var instrument = instruments[i]\n    if (instrument === +instrument) { // is numeric\n      if (root.GM.byId[instrument]) {\n        instruments[i] = root.GM.byId[instrument].id\n      }\n    }\n  }\n  // /\n  opts.format = root.__audioFormat\n  opts.instruments = instruments\n  // /\n  connect[root.__api](opts)\n}\n\nvar connect = {\n  webmidi: function (opts) {\n    // cant wait for this to be standardized!\n    root.WebMIDI.connect(opts)\n  },\n  audiotag: function (opts) {\n    // works ok, kinda like a drunken tuna fish, across the board\n    // http://caniuse.com/audio\n    requestQueue(opts, 'AudioTag')\n  },\n  webaudio: function (opts) {\n    // works awesome! safari, chrome and firefox support\n    // http://caniuse.com/web-audio\n    requestQueue(opts, 'WebAudio')\n  }\n}\n\nvar requestQueue = function (opts, context) {\n  var audioFormat = opts.format\n  var instruments = opts.instruments\n  var onprogress = opts.onprogress\n  var onerror = opts.onerror\n  // /\n  var length = instruments.length\n  var pending = length\n  var waitForEnd = function () {\n    if (!--pending) {\n      onprogress && onprogress('load', 1.0)\n      root[context].connect(opts)\n    }\n  }\n  // /\n  for (var i = 0; i < length; i++) {\n    var instrumentId = instruments[i]\n    if (root.Soundfont[instrumentId]) { // already loaded\n      waitForEnd()\n    } else { // needs to be requested\n      sendRequest(instruments[i], audioFormat, function (evt, progress) {\n        var fileProgress = progress / length\n        var queueProgress = (length - pending) / length\n        onprogress && onprogress('load', fileProgress + queueProgress, instrumentId)\n      }, function () {\n        waitForEnd()\n      }, onerror)\n    }\n  }\n}\n\nvar sendRequest = function (instrumentId, audioFormat, onprogress, onsuccess, onerror) {\n  var soundfontPath = root.soundfontUrl + instrumentId + '-' + audioFormat + '.js'\n  if (root.USE_XHR) {\n    request({\n      url: soundfontPath,\n      format: 'text',\n      onerror: onerror,\n      onprogress: onprogress,\n      onsuccess: function (event, responseText) {\n        var script = document.createElement('script')\n        script.language = 'javascript'\n        script.type = 'text/javascript'\n        script.text = responseText\n        document.body.appendChild(script)\n        onsuccess()\n      }\n    })\n  } else {\n    loadScript.add({\n      url: soundfontPath,\n      verify: 'root.Soundfont[\"' + instrumentId + '\"]',\n      onerror: onerror,\n      onsuccess: function () {\n        onsuccess()\n      }\n    })\n  }\n}\n\nroot.setDefaultPlugin = function (midi) {\n  for (var key in midi) {\n    root[key] = midi[key]\n  }\n}\n","export * from './audio-detect'\nexport * from './load-script'\nexport * from './request'\n","/*\n  ----------------------------------------------------------\n  midi.audioDetect : 0.3.2 : 2015-03-26\n  ----------------------------------------------------------\n  https://github.com/mudcube/midi.js\n  ----------------------------------------------------------\n  Probably, Maybe, No... Absolutely!\n  Test to see what types of <audio> MIME types are playable by the browser.\n  ----------------------------------------------------------\n*/\n\nconst supports = {} // object of supported file types\nlet pending = 0 // pending file types to process\nconst canPlayThrough = function (src) { // check whether format plays through\n  pending++\n  const body = document.body\n  const audio = new window.Audio()\n  const mime = src.split(';')[0]\n  audio.id = 'audio'\n  audio.setAttribute('preload', 'auto')\n  audio.setAttribute('audiobuffer', true)\n  audio.addEventListener('error', function () {\n    body.removeChild(audio)\n    supports[mime] = false\n    pending--\n  }, false)\n  audio.addEventListener('canplaythrough', function () {\n    body.removeChild(audio)\n    supports[mime] = true\n    pending--\n  }, false)\n  audio.src = 'data:' + src\n  body.appendChild(audio)\n}\n\nexport const audioDetect = function (onsuccess) {\n  // / detect jazz-midi plugin\n  if (navigator.requestMIDIAccess) {\n    const isNative = Function.prototype.toString.call(navigator.requestMIDIAccess).indexOf('[native code]')\n    if (isNative) { // has native midiapi support\n      supports['webmidi'] = true\n    } else { // check for jazz plugin midiapi support\n      for (let n = 0; navigator.plugins.length > n; n++) {\n        const plugin = navigator.plugins[n]\n        if (plugin.name.indexOf('Jazz-Plugin') >= 0) {\n          supports['webmidi'] = true\n        }\n      }\n    }\n  }\n\n  // / check whether <audio> tag is supported\n  if (typeof (window.Audio) === 'undefined') {\n    return onsuccess({})\n  } else {\n    supports['audiotag'] = true\n  }\n\n  // / check for webaudio api support\n  if (window.AudioContext || window.webkitAudioContext) {\n    supports['webaudio'] = true\n  }\n\n  // / check whether canPlayType is supported\n  const audio = new window.Audio()\n  if (typeof (audio.canPlayType) === 'undefined') {\n    return onsuccess(supports)\n  }\n\n  // / see what we can learn from the browser\n  let vorbis = audio.canPlayType('audio/ogg; codecs=\"vorbis\"')\n  vorbis = (vorbis === 'probably' || vorbis === 'maybe')\n  let mpeg = audio.canPlayType('audio/mpeg')\n  mpeg = (mpeg === 'probably' || mpeg === 'maybe')\n  // maybe nothing is supported\n  if (!vorbis && !mpeg) {\n    onsuccess(supports)\n    return\n  }\n\n  // / or maybe something is supported\n  if (vorbis) canPlayThrough('audio/ogg;base64,T2dnUwACAAAAAAAAAADqnjMlAAAAAOyyzPIBHgF2b3JiaXMAAAAAAUAfAABAHwAAQB8AAEAfAACZAU9nZ1MAAAAAAAAAAAAA6p4zJQEAAAANJGeqCj3//////////5ADdm9yYmlzLQAAAFhpcGguT3JnIGxpYlZvcmJpcyBJIDIwMTAxMTAxIChTY2hhdWZlbnVnZ2V0KQAAAAABBXZvcmJpcw9CQ1YBAAABAAxSFCElGVNKYwiVUlIpBR1jUFtHHWPUOUYhZBBTiEkZpXtPKpVYSsgRUlgpRR1TTFNJlVKWKUUdYxRTSCFT1jFloXMUS4ZJCSVsTa50FkvomWOWMUYdY85aSp1j1jFFHWNSUkmhcxg6ZiVkFDpGxehifDA6laJCKL7H3lLpLYWKW4q91xpT6y2EGEtpwQhhc+211dxKasUYY4wxxsXiUyiC0JBVAAABAABABAFCQ1YBAAoAAMJQDEVRgNCQVQBABgCAABRFcRTHcRxHkiTLAkJDVgEAQAAAAgAAKI7hKJIjSZJkWZZlWZameZaouaov+64u667t6roOhIasBACAAAAYRqF1TCqDEEPKQ4QUY9AzoxBDDEzGHGNONKQMMogzxZAyiFssLqgQBKEhKwKAKAAAwBjEGGIMOeekZFIi55iUTkoDnaPUUcoolRRLjBmlEluJMYLOUeooZZRCjKXFjFKJscRUAABAgAMAQICFUGjIigAgCgCAMAYphZRCjCnmFHOIMeUcgwwxxiBkzinoGJNOSuWck85JiRhjzjEHlXNOSuekctBJyaQTAAAQ4AAAEGAhFBqyIgCIEwAwSJKmWZomipamiaJniqrqiaKqWp5nmp5pqqpnmqpqqqrrmqrqypbnmaZnmqrqmaaqiqbquqaquq6nqrZsuqoum65q267s+rZru77uqapsm6or66bqyrrqyrbuurbtS56nqqKquq5nqq6ruq5uq65r25pqyq6purJtuq4tu7Js664s67pmqq5suqotm64s667s2rYqy7ovuq5uq7Ks+6os+75s67ru2rrwi65r66os674qy74x27bwy7ouHJMnqqqnqq7rmarrqq5r26rr2rqmmq5suq4tm6or26os67Yry7aumaosm64r26bryrIqy77vyrJui67r66Ys67oqy8Lu6roxzLat+6Lr6roqy7qvyrKuu7ru+7JuC7umqrpuyrKvm7Ks+7auC8us27oxuq7vq7It/KosC7+u+8Iy6z5jdF1fV21ZGFbZ9n3d95Vj1nVhWW1b+V1bZ7y+bgy7bvzKrQvLstq2scy6rSyvrxvDLux8W/iVmqratum6um7Ksq/Lui60dd1XRtf1fdW2fV+VZd+3hV9pG8OwjK6r+6os68Jry8ov67qw7MIvLKttK7+r68ow27qw3L6wLL/uC8uq277v6rrStXVluX2fsSu38QsAABhwAAAIMKEMFBqyIgCIEwBAEHIOKQahYgpCCKGkEEIqFWNSMuakZM5JKaWUFEpJrWJMSuaclMwxKaGUlkopqYRSWiqlxBRKaS2l1mJKqcVQSmulpNZKSa2llGJMrcUYMSYlc05K5pyUklJrJZXWMucoZQ5K6iCklEoqraTUYuacpA46Kx2E1EoqMZWUYgupxFZKaq2kFGMrMdXUWo4hpRhLSrGVlFptMdXWWqs1YkxK5pyUzDkqJaXWSiqtZc5J6iC01DkoqaTUYiopxco5SR2ElDLIqJSUWiupxBJSia20FGMpqcXUYq4pxRZDSS2WlFosqcTWYoy1tVRTJ6XFklKMJZUYW6y5ttZqDKXEVkqLsaSUW2sx1xZjjqGkFksrsZWUWmy15dhayzW1VGNKrdYWY40x5ZRrrT2n1mJNMdXaWqy51ZZbzLXnTkprpZQWS0oxttZijTHmHEppraQUWykpxtZara3FXEMpsZXSWiypxNhirLXFVmNqrcYWW62ltVprrb3GVlsurdXcYqw9tZRrrLXmWFNtBQAADDgAAASYUAYKDVkJAEQBAADGMMYYhEYpx5yT0ijlnHNSKucghJBS5hyEEFLKnINQSkuZcxBKSSmUklJqrYVSUmqttQIAAAocAAACbNCUWByg0JCVAEAqAIDBcTRNFFXVdX1fsSxRVFXXlW3jVyxNFFVVdm1b+DVRVFXXtW3bFn5NFFVVdmXZtoWiqrqybduybgvDqKqua9uybeuorqvbuq3bui9UXVmWbVu3dR3XtnXd9nVd+Bmzbeu2buu+8CMMR9/4IeTj+3RCCAAAT3AAACqwYXWEk6KxwEJDVgIAGQAAgDFKGYUYM0gxphhjTDHGmAAAgAEHAIAAE8pAoSErAoAoAADAOeecc84555xzzjnnnHPOOeecc44xxhhjjDHGGGOMMcYYY4wxxhhjjDHGGGOMMcYYY0wAwE6EA8BOhIVQaMhKACAcAABACCEpKaWUUkoRU85BSSmllFKqFIOMSkoppZRSpBR1lFJKKaWUIqWgpJJSSimllElJKaWUUkoppYw6SimllFJKKaWUUkoppZRSSimllFJKKaWUUkoppZRSSimllFJKKaWUUkoppZRSSimllFJKKaWUUkoppZRSSimllFJKKaVUSimllFJKKaWUUkoppRQAYPLgAACVYOMMK0lnhaPBhYasBAByAwAAhRiDEEJpraRUUkolVc5BKCWUlEpKKZWUUqqYgxBKKqmlklJKKbXSQSihlFBKKSWUUkooJYQQSgmhlFRCK6mEUkoHoYQSQimhhFRKKSWUzkEoIYUOQkmllNRCSB10VFIpIZVSSiklpZQ6CKGUklJLLZVSWkqpdBJSKamV1FJqqbWSUgmhpFZKSSWl0lpJJbUSSkklpZRSSymFVFJJJYSSUioltZZaSqm11lJIqZWUUkqppdRSSiWlkEpKqZSSUmollZRSaiGVlEpJKaTUSimlpFRCSamlUlpKLbWUSkmptFRSSaWUlEpJKaVSSksppRJKSqmllFpJKYWSUkoplZJSSyW1VEoKJaWUUkmptJRSSymVklIBAEAHDgAAAUZUWoidZlx5BI4oZJiAAgAAQABAgAkgMEBQMApBgDACAQAAAADAAAAfAABHARAR0ZzBAUKCwgJDg8MDAAAAAAAAAAAAAACAT2dnUwAEAAAAAAAAAADqnjMlAgAAADzQPmcBAQA=')\n  if (mpeg) canPlayThrough('audio/mpeg;base64,/+MYxAAAAANIAUAAAASEEB/jwOFM/0MM/90b/+RhST//w4NFwOjf///PZu////9lns5GFDv//l9GlUIEEIAAAgIg8Ir/JGq3/+MYxDsLIj5QMYcoAP0dv9HIjUcH//yYSg+CIbkGP//8w0bLVjUP///3Z0x5QCAv/yLjwtGKTEFNRTMuOTeqqqqqqqqqqqqq/+MYxEkNmdJkUYc4AKqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq')\n\n  // / lets find out!\n  const time = (new Date()).getTime()\n  let interval = window.setInterval(function () {\n    const now = (new Date()).getTime()\n    const maxExecution = now - time > 5000\n    if (!pending || maxExecution) {\n      window.clearInterval(interval)\n      onsuccess(supports)\n    }\n  }, 1)\n}\n","/*\n  -----------------------------------------------------------\n  loadScript.js : 0.1.4 : 2014/02/12 : http://mudcu.be\n  -----------------------------------------------------------\n  Copyright 2011-2014 Mudcube. All rights reserved.\n  -----------------------------------------------------------\n  /// No verification\n  loadScript.add(\"../js/jszip/jszip.js\")\n  /// Strict loading order and verification.\n  loadScript.add({\n    strictOrder: true,\n    urls: [\n      {\n        url: \"../js/jszip/jszip.js\",\n        verify: \"JSZip\",\n        onsuccess: function() {\n          console.log(1)\n        }\n      },\n      {\n        url: \"../inc/downloadify/js/swfobject.js\",\n        verify: \"swfobject\",\n        onsuccess: function() {\n          console.log(2)\n        }\n      }\n    ],\n    onsuccess: function() {\n      console.log(3)\n    }\n  })\n  /// Just verification.\n  loadScript.add({\n    url: \"../js/jszip/jszip.js\",\n    verify: \"JSZip\",\n    onsuccess: function() {\n      console.log(1)\n    }\n  })\n*/\n\nconst _globalExists = function (path, root) {\n  try {\n    path = path.split('\"').join('').split(\"'\").join('').split(']').join('').split('[').join('.')\n    var parts = path.split('.')\n    var length = parts.length\n    var object = root || window\n    for (var n = 0; n < length; n++) {\n      var key = parts[n]\n      if (object[key] == null) {\n        return false\n      } else { //\n        object = object[key]\n      }\n    }\n    return true\n  } catch (e) {\n    return false\n  }\n}\n\nconst LoadScript = function () {\n  this.loaded = {}\n  this.loading = {}\n  return this\n}\n\nLoadScript.prototype.add = function (config) {\n  var that = this\n  if (typeof (config) === 'string') {\n    config = { url: config }\n  }\n  var urls = config.urls\n  if (typeof (urls) === 'undefined') {\n    urls = [{\n      url: config.url,\n      verify: config.verify\n    }]\n  }\n  // / adding the elements to the head\n  var doc = document.getElementsByTagName('head')[0]\n  // /\n  var testElement = function (element, test) {\n    if (that.loaded[element.url]) return\n    if (test && _globalExists(test) === false) return\n    that.loaded[element.url] = true\n    //\n    if (that.loading[element.url]) that.loading[element.url]()\n    delete that.loading[element.url]\n    //\n    if (element.onsuccess) element.onsuccess()\n    if (typeof (getNext) !== 'undefined') getNext()\n  }\n  // /\n  var hasError = false\n  var batchTest = []\n  var addElement = function (element) {\n    if (typeof (element) === 'string') {\n      element = {\n        url: element,\n        verify: config.verify\n      }\n    }\n    if (/([\\w\\d.\\[\\]'\"])$/.test(element.verify)) { // check whether its a variable reference\n      var verify = element.test = element.verify\n      if (typeof (verify) === 'object') {\n        for (var n = 0; n < verify.length; n++) {\n          batchTest.push(verify[n])\n        }\n      } else {\n        batchTest.push(verify)\n      }\n    }\n    if (that.loaded[element.url]) return\n    var script = document.createElement('script')\n    script.onreadystatechange = function () {\n      if (this.readyState !== 'loaded' && this.readyState !== 'complete') return\n      testElement(element)\n    }\n    script.onload = function () {\n      testElement(element)\n    }\n    script.onerror = function () {\n      hasError = true\n      delete that.loading[element.url]\n      if (typeof (element.test) === 'object') {\n        for (let key in element.test) {\n          removeTest(element.test[key])\n        }\n      } else {\n        removeTest(element.test)\n      }\n    }\n    script.setAttribute('type', 'text/javascript')\n    script.setAttribute('src', element.url)\n    doc.appendChild(script)\n    that.loading[element.url] = function () {}\n  }\n  // / checking to see whether everything loaded properly\n  var removeTest = function (test) {\n    var ret = []\n    for (var n = 0; n < batchTest.length; n++) {\n      if (batchTest[n] === test) continue\n      ret.push(batchTest[n])\n    }\n    batchTest = ret\n  }\n  var onLoad = function (element) {\n    if (element) {\n      testElement(element, element.test)\n    } else {\n      for (let n = 0; n < urls.length; n++) {\n        testElement(urls[n], urls[n].test)\n      }\n    }\n    var istrue = true\n    for (let n = 0; n < batchTest.length; n++) {\n      if (_globalExists(batchTest[n]) === false) {\n        istrue = false\n      }\n    }\n    if (!config.strictOrder && istrue) { // finished loading all the requested scripts\n      if (hasError) {\n        if (config.error) {\n          config.error()\n        }\n      } else if (config.onsuccess) {\n        config.onsuccess()\n      }\n    } else { // keep calling back the function\n      setTimeout(function () { // - should get slower over time?\n        onLoad(element)\n      }, 10)\n    }\n  }\n  // / loading methods;  strict ordering or loose ordering\n  if (config.strictOrder) {\n    var ID = -1\n    var getNext = function () {\n      ID++\n      if (!urls[ID]) { // all elements are loaded\n        if (hasError) {\n          if (config.error) {\n            config.error()\n          }\n        } else if (config.onsuccess) {\n          config.onsuccess()\n        }\n      } else { // loading new script\n        var element = urls[ID]\n        var url = element.url\n        if (that.loading[url]) { // already loading from another call (attach to event)\n          that.loading[url] = function () {\n            if (element.onsuccess) element.onsuccess()\n            getNext()\n          }\n        } else if (!that.loaded[url]) { // create script element\n          addElement(element)\n          onLoad(element)\n        } else { // it's already been successfully loaded\n          getNext()\n        }\n      }\n    }\n    getNext()\n  } else { // loose ordering\n    for (let ID = 0; ID < urls.length; ID++) {\n      addElement(urls[ID])\n      onLoad(urls[ID])\n    }\n  }\n}\n\nexport const loadScript = new LoadScript()\n","/*\n  ----------------------------------------------------------\n  Request : 0.1.1 : 2015-03-26\n  ----------------------------------------------------------\n  request({\n    url: './dir/something.extension',\n    data: 'test!',\n    format: 'text', // text | xml | json | binary\n    responseType: 'text', // arraybuffer | blob | document | json | text\n    headers: {},\n    withCredentials: true, // true | false\n    ///\n    onerror: function(evt, percent) {\n      console.log(evt)\n    },\n    onsuccess: function(evt, responseText) {\n      console.log(responseText)\n    },\n    onprogress: function(evt, percent) {\n      percent = Math.round(percent * 100)\n      loader.create('thread', 'loading... ', percent)\n    }\n  })\n*/\n\nexport function request (opts, onsuccess, onerror, onprogress) {\n  if (typeof opts === 'string') opts = {url: opts}\n  const data = opts.data\n  const url = opts.url\n  const method = opts.method || (opts.data ? 'POST' : 'GET')\n  const format = opts.format\n  const headers = opts.headers\n  const responseType = opts.responseType\n  const withCredentials = opts.withCredentials || false\n  const xhr = new window.XMLHttpRequest()\n  onsuccess = onsuccess || opts.onsuccess\n  onerror = onerror || opts.onerror\n  onprogress = onprogress || opts.onprogress\n  xhr.open(method, url, true)\n  if (headers) {\n    for (var type in headers) {\n      xhr.setRequestHeader(type, headers[type])\n    }\n  } else if (data) { // set the default headers for POST\n    xhr.setRequestHeader('Content-type', 'application/x-www-form-urlencoded')\n  }\n  if (format === 'binary') { // - default to responseType=\"blob\" when supported\n    if (xhr.overrideMimeType) {\n      xhr.overrideMimeType('text/plain; charset=x-user-defined')\n    }\n  }\n  if (responseType) {\n    xhr.responseType = responseType\n  }\n  if (withCredentials) {\n    xhr.withCredentials = 'true'\n  }\n  if (onerror && 'onerror' in xhr) {\n    xhr.onerror = onerror\n  }\n  if (onprogress && xhr.upload && 'onprogress' in xhr.upload) {\n    if (data) {\n      xhr.upload.onprogress = function (evt) {\n        onprogress.call(xhr, evt, evt.loaded / evt.total)\n      }\n    } else {\n      xhr.addEventListener('progress', function (evt) {\n        var totalBytes = 0\n        if (evt.lengthComputable) {\n          totalBytes = evt.total\n        } else if (xhr.totalBytes) {\n          totalBytes = xhr.totalBytes\n        } else {\n          var rawBytes = parseInt(xhr.getResponseHeader('Content-Length-Raw'))\n          if (isFinite(rawBytes)) {\n            xhr.totalBytes = totalBytes = rawBytes\n          } else {\n            return\n          }\n        }\n        onprogress.call(xhr, evt, evt.loaded / totalBytes)\n      })\n    }\n  }\n  // /\n  xhr.onreadystatechange = function (evt) {\n    if (xhr.readyState === 4) { // The request is complete\n      if (xhr.status === 200 || // Response OK\n        xhr.status === 304 || // Not Modified\n        xhr.status === 308 // Permanent Redirect\n      ) {\n        if (onsuccess) {\n          var res\n          if (format === 'xml') {\n            res = evt.target.responseXML\n          } else if (format === 'text') {\n            res = evt.target.responseText\n          } else if (format === 'json') {\n            try {\n              res = JSON.parse(evt.target.response)\n            } catch (err) {\n              onerror && onerror.call(xhr, evt)\n            }\n          }\n          onsuccess.call(xhr, evt, res)\n        }\n      } else {\n        onerror && onerror.call(xhr, evt)\n      }\n    }\n  }\n  xhr.send(data)\n  return xhr\n}\n","/*\n  ----------------------------------------------------------\n  GeneralMIDI\n  ----------------------------------------------------------\n*/\n\nimport root from './root'\n\nroot.GM = (function (map) {\n  const clean = function (name) {\n    return name.replace(/[^a-z0-9 ]/gi, '').replace(/[ ]/g, '_').toLowerCase()\n  }\n  const res = {\n    byName: { },\n    byId: { },\n    byCategory: { }\n  }\n  for (let key in map) {\n    var list = map[key]\n    for (var n = 0, length = list.length; n < length; n++) {\n      var instrument = list[n]\n      if (!instrument) continue\n      var num = parseInt(instrument.substr(0, instrument.indexOf(' ')), 10)\n      instrument = instrument.replace(num + ' ', '')\n      res.byId[--num] =\n        res.byName[clean(instrument)] =\n          res.byCategory[clean(key)] = {\n            id: clean(instrument),\n            instrument: instrument,\n            number: num,\n            category: key\n          }\n    }\n  }\n  return res\n})({\n  'Piano': ['1 Acoustic Grand Piano', '2 Bright Acoustic Piano', '3 Electric Grand Piano', '4 Honky-tonk Piano', '5 Electric Piano 1', '6 Electric Piano 2', '7 Harpsichord', '8 Clavinet'],\n  'Chromatic Percussion': ['9 Celesta', '10 Glockenspiel', '11 Music Box', '12 Vibraphone', '13 Marimba', '14 Xylophone', '15 Tubular Bells', '16 Dulcimer'],\n  'Organ': ['17 Drawbar Organ', '18 Percussive Organ', '19 Rock Organ', '20 Church Organ', '21 Reed Organ', '22 Accordion', '23 Harmonica', '24 Tango Accordion'],\n  'Guitar': ['25 Acoustic Guitar (nylon)', '26 Acoustic Guitar (steel)', '27 Electric Guitar (jazz)', '28 Electric Guitar (clean)', '29 Electric Guitar (muted)', '30 Overdriven Guitar', '31 Distortion Guitar', '32 Guitar Harmonics'],\n  'Bass': ['33 Acoustic Bass', '34 Electric Bass (finger)', '35 Electric Bass (pick)', '36 Fretless Bass', '37 Slap Bass 1', '38 Slap Bass 2', '39 Synth Bass 1', '40 Synth Bass 2'],\n  'Strings': ['41 Violin', '42 Viola', '43 Cello', '44 Contrabass', '45 Tremolo Strings', '46 Pizzicato Strings', '47 Orchestral Harp', '48 Timpani'],\n  'Ensemble': ['49 String Ensemble 1', '50 String Ensemble 2', '51 Synth Strings 1', '52 Synth Strings 2', '53 Choir Aahs', '54 Voice Oohs', '55 Synth Choir', '56 Orchestra Hit'],\n  'Brass': ['57 Trumpet', '58 Trombone', '59 Tuba', '60 Muted Trumpet', '61 French Horn', '62 Brass Section', '63 Synth Brass 1', '64 Synth Brass 2'],\n  'Reed': ['65 Soprano Sax', '66 Alto Sax', '67 Tenor Sax', '68 Baritone Sax', '69 Oboe', '70 English Horn', '71 Bassoon', '72 Clarinet'],\n  'Pipe': ['73 Piccolo', '74 Flute', '75 Recorder', '76 Pan Flute', '77 Blown Bottle', '78 Shakuhachi', '79 Whistle', '80 Ocarina'],\n  'Synth Lead': ['81 Lead 1 (square)', '82 Lead 2 (sawtooth)', '83 Lead 3 (calliope)', '84 Lead 4 (chiff)', '85 Lead 5 (charang)', '86 Lead 6 (voice)', '87 Lead 7 (fifths)', '88 Lead 8 (bass + lead)'],\n  'Synth Pad': ['89 Pad 1 (new age)', '90 Pad 2 (warm)', '91 Pad 3 (polysynth)', '92 Pad 4 (choir)', '93 Pad 5 (bowed)', '94 Pad 6 (metallic)', '95 Pad 7 (halo)', '96 Pad 8 (sweep)'],\n  'Synth Effects': ['97 FX 1 (rain)', '98 FX 2 (soundtrack)', '99 FX 3 (crystal)', '100 FX 4 (atmosphere)', '101 FX 5 (brightness)', '102 FX 6 (goblins)', '103 FX 7 (echoes)', '104 FX 8 (sci-fi)'],\n  'Ethnic': ['105 Sitar', '106 Banjo', '107 Shamisen', '108 Koto', '109 Kalimba', '110 Bagpipe', '111 Fiddle', '112 Shanai'],\n  'Percussive': ['113 Tinkle Bell', '114 Agogo', '115 Steel Drums', '116 Woodblock', '117 Taiko Drum', '118 Melodic Tom', '119 Synth Drum'],\n  'Sound effects': ['120 Reverse Cymbal', '121 Guitar Fret Noise', '122 Breath Noise', '123 Seashore', '124 Bird Tweet', '125 Telephone Ring', '126 Helicopter', '127 Applause', '128 Gunshot']\n})\n\n/* get/setInstrument\n--------------------------------------------------- */\nroot.getInstrument = function (channelId) {\n  var channel = root.channels[channelId]\n  return channel && channel.instrument\n}\n\nroot.setInstrument = function (channelId, program, delay) {\n  var channel = root.channels[channelId]\n  if (delay) {\n    return setTimeout(function () {\n      channel.instrument = program\n    }, delay)\n  } else {\n    channel.instrument = program\n  }\n}\n\n/* get/setMono\n--------------------------------------------------- */\nroot.getMono = function (channelId) {\n  var channel = root.channels[channelId]\n  return channel && channel.mono\n}\n\nroot.setMono = function (channelId, truthy, delay) {\n  var channel = root.channels[channelId]\n  if (delay) {\n    return setTimeout(function () {\n      channel.mono = truthy\n    }, delay)\n  } else {\n    channel.mono = truthy\n  }\n}\n\n/* get/setOmni\n--------------------------------------------------- */\nroot.getOmni = function (channelId) {\n  var channel = root.channels[channelId]\n  return channel && channel.omni\n}\n\nroot.setOmni = function (channelId, truthy, delay) {\n  var channel = root.channels[channelId]\n  if (delay) {\n    return setTimeout(function () {\n      channel.omni = truthy\n    }, delay)\n  } else {\n    channel.omni = truthy\n  }\n}\n\n/* get/setSolo\n--------------------------------------------------- */\nroot.getSolo = function (channelId) {\n  var channel = root.channels[channelId]\n  return channel && channel.solo\n}\n\nroot.setSolo = function (channelId, truthy, delay) {\n  var channel = root.channels[channelId]\n  if (delay) {\n    return setTimeout(function () {\n      channel.solo = truthy\n    }, delay)\n  } else {\n    channel.solo = truthy\n  }\n}\n\n/* channels\n--------------------------------------------------- */\nroot.channels = (function () { // 0 - 15 channels\n  var channels = {}\n  for (let i = 0; i < 16; i++) {\n    channels[i] = { // default values\n      instrument: i,\n      pitchBend: 0,\n      mute: false,\n      mono: false,\n      omni: false,\n      solo: false\n    }\n  }\n  return channels\n})()\n\n/* note conversions\n--------------------------------------------------- */\nroot.keyToNote = {} // C8  == 108\nroot.noteToKey = {} // 108 ==  C8\n\n~(function () {\n  var A0 = 0x15 // first note\n  var C8 = 0x6C // last note\n  var number2key = ['C', 'Db', 'D', 'Eb', 'E', 'F', 'Gb', 'G', 'Ab', 'A', 'Bb', 'B']\n  for (let n = A0; n <= C8; n++) {\n    var octave = (n - 12) / 12 >> 0\n    var name = number2key[n % 12] + octave\n    root.keyToNote[name] = n\n    root.noteToKey[n] = name\n  }\n})()\n","/*\n  ----------------------------------------------------------\n  midi.Player : 0.3.1 : 2015-03-26\n  ----------------------------------------------------------\n  https://github.com/mudcube/midi.js\n  ----------------------------------------------------------\n*/\n\nimport { MidiFile, Replayer } from './jasmid'\nimport root from './root'\n\n(function () {\n  root.Player = {}\n  const player = root.Player\n  player.currentTime = 0\n  player.endTime = 0\n  player.restart = 0\n  player.playing = false\n  player.timeWarp = 1\n  player.startDelay = 0\n  player.BPM = 120\n\n  player.start = player.resume = function (onsuccess) {\n    if (player.currentTime < -1) {\n      player.currentTime = -1\n    }\n    startAudio(player.currentTime, null, onsuccess)\n  }\n\n  player.pause = function () {\n    var tmp = player.restart\n    stopAudio()\n    player.restart = tmp\n  }\n\n  player.stop = function () {\n    stopAudio()\n    player.restart = 0\n    player.currentTime = 0\n  }\n\n  player.addListener = function (onsuccess) {\n    onMidiEvent = onsuccess\n  }\n\n  player.removeListener = function () {\n    onMidiEvent = undefined\n  }\n\n  player.clearAnimation = function () {\n    if (player.animationFrameId) {\n      window.cancelAnimationFrame(player.animationFrameId)\n    }\n  }\n\n  player.setAnimation = function (callback) {\n    var currentTime = 0\n    var tOurTime = 0\n    var tTheirTime = 0\n    //\n    player.clearAnimation()\n    // /\n    var frame = function () {\n      player.animationFrameId = window.requestAnimationFrame(frame)\n      // /\n      if (player.endTime === 0) {\n        return\n      }\n      if (player.playing) {\n        currentTime = (tTheirTime === player.currentTime) ? tOurTime - Date.now() : 0\n        if (player.currentTime === 0) {\n          currentTime = 0\n        } else {\n          currentTime = player.currentTime - currentTime\n        }\n        if (tTheirTime !== player.currentTime) {\n          tOurTime = Date.now()\n          tTheirTime = player.currentTime\n        }\n      } else { // paused\n        currentTime = player.currentTime\n      }\n      // /\n      var endTime = player.endTime\n      // var percent = currentTime / endTime\n      var total = currentTime / 1000\n      var minutes = total / 60\n      var seconds = total - (minutes * 60)\n      var t1 = minutes * 60 + seconds\n      var t2 = (endTime / 1000)\n      // /\n      if (t2 - t1 < -1.0) {\n        return\n      } else {\n        callback({\n          now: t1,\n          end: t2,\n          events: noteRegistrar\n        })\n      }\n    }\n    // /\n    window.requestAnimationFrame(frame)\n  }\n\n  // helpers\n\n  player.loadMidiFile = function (onsuccess, onprogress, onerror) {\n    try {\n      // console.log(MidiFile(player.currentData), new Replayer(MidiFile(player.currentData), player.timeWarp, null, player.BPM))\n      player.replayer = new Replayer(MidiFile(player.currentData), player.timeWarp, null, player.BPM)\n      player.data = player.replayer.getData()\n      player.endTime = getLength()\n      // /\n      root.loadPlugin({\n        // instruments: player.getFileInstruments(),\n        onsuccess: onsuccess,\n        onprogress: onprogress,\n        onerror: onerror\n      })\n    } catch (event) {\n      console.error(event)\n      onerror && onerror(event)\n    }\n  }\n\n  player.loadFile = function (file, onsuccess, onprogress, onerror) {\n    player.stop()\n    if (file.indexOf('base64,') !== -1) {\n      var data = window.atob(file.split(',')[1])\n      player.currentData = data\n      player.loadMidiFile(onsuccess, onprogress, onerror)\n    } else {\n      var fetch = new window.XMLHttpRequest()\n      fetch.open('GET', file)\n      fetch.overrideMimeType('text/plain; charset=x-user-defined')\n      fetch.onreadystatechange = function () {\n        if (this.readyState === 4) {\n          if (this.status === 200) {\n            var t = this.responseText || ''\n            var ff = []\n            var mx = t.length\n            var scc = String.fromCharCode\n            for (var z = 0; z < mx; z++) {\n              ff[z] = scc(t.charCodeAt(z) & 255)\n            }\n            // /\n            var data = ff.join('')\n            player.currentData = data\n            player.loadMidiFile(onsuccess, onprogress, onerror)\n          } else {\n            onerror && onerror('Unable to load MIDI file')\n          }\n        }\n      }\n      fetch.send()\n    }\n  }\n\n  player.getFileInstruments = function () {\n    var instruments = {}\n    var programs = {}\n    for (var n = 0; n < player.data.length; n++) {\n      var event = player.data[n][0].event\n      if (event.type !== 'channel') {\n        continue\n      }\n      var channel = event.channel\n      switch (event.subtype) {\n        case 'controller':\n          //        console.log(event.channel, root.defineControl[event.controllerType], event.value)\n          break\n        case 'programChange':\n          programs[channel] = event.programNumber\n          break\n        case 'noteOn':\n          var program = programs[channel]\n          var gm = root.GM.byId[isFinite(program) ? program : channel]\n          instruments[gm.id] = true\n          break\n      }\n    }\n    var ret = []\n    for (var key in instruments) {\n      ret.push(key)\n    }\n    return ret\n  }\n\n  // Playing the audio\n\n  var eventQueue = [] // hold events to be triggered\n  var queuedTime //\n  var startTime = 0 // to measure time elapse\n  var noteRegistrar = {} // get event for requested note\n  var onMidiEvent // listener\n  var scheduleTracking = function (channel, note, currentTime, offset, message, velocity, time) {\n    return setTimeout(function () {\n      var data = {\n        channel: channel,\n        note: note,\n        now: currentTime,\n        end: player.endTime,\n        message: message,\n        velocity: velocity\n      }\n      //\n      if (message === 128) {\n        delete noteRegistrar[note]\n      } else {\n        noteRegistrar[note] = data\n      }\n      if (onMidiEvent) {\n        onMidiEvent(data)\n      }\n      player.currentTime = currentTime\n      // /\n      eventQueue.shift()\n      // /\n      if (eventQueue.length < 1000) {\n        startAudio(queuedTime, true)\n      } else if (player.currentTime === queuedTime && queuedTime < player.endTime) { // grab next sequence\n        startAudio(queuedTime, true)\n      }\n    }, currentTime - offset)\n  }\n\n  var getContext = function () {\n    if (root.api === 'webaudio') {\n      return root.WebAudio.getContext()\n    } else {\n      player.ctx = {currentTime: 0}\n    }\n    return player.ctx\n  }\n\n  var getLength = function () {\n    var data = player.data\n    var length = data.length\n    var totalTime = 0.5\n    for (var n = 0; n < length; n++) {\n      totalTime += data[n][1]\n    }\n    return totalTime\n  }\n\n  var __now\n  var getNow = function () {\n    if (window.performance && window.performance.now) {\n      return window.performance.now()\n    } else {\n      return Date.now()\n    }\n  }\n\n  var startAudio = function (currentTime, fromCache, onsuccess) {\n    if (!player.replayer) {\n      return\n    }\n    if (!fromCache) {\n      if (typeof currentTime === 'undefined') {\n        currentTime = player.restart\n      }\n      // /\n      player.playing && stopAudio()\n      player.playing = true\n      player.data = player.replayer.getData()\n      player.endTime = getLength()\n    }\n    // /\n    var note\n    var offset = 0\n    var messages = 0\n    var data = player.data\n    var ctx = getContext()\n    var length = data.length\n    //\n    queuedTime = 0.5\n    // /\n    // var interval = eventQueue[0] && eventQueue[0].interval || 0\n    var foffset = currentTime - player.currentTime\n    // /\n    if (root.api !== 'webaudio') { // set currentTime on ctx\n      var now = getNow()\n      __now = __now || now\n      ctx.currentTime = (now - __now) / 1000\n    }\n    // /\n    startTime = ctx.currentTime\n    // /\n    for (var n = 0; n < length && messages < 100; n++) {\n      var obj = data[n]\n      if ((queuedTime += obj[1]) <= currentTime) {\n        offset = queuedTime\n        continue\n      }\n      // /\n      currentTime = queuedTime - offset\n      // /\n      var event = obj[0].event\n      if (event.type !== 'channel') {\n        continue\n      }\n      // /\n      var channelId = event.channel\n      var channel = root.channels[channelId]\n      var delay = ctx.currentTime + ((currentTime + foffset + player.startDelay) / 1000)\n      var queueTime = queuedTime - offset + player.startDelay\n      switch (event.subtype) {\n        case 'controller':\n          root.setController(channelId, event.controllerType, event.value, delay)\n          break\n        case 'programChange':\n          root.programChange(channelId, event.programNumber, delay)\n          break\n        case 'pitchBend':\n          root.pitchBend(channelId, event.value, delay)\n          break\n        case 'noteOn':\n          if (channel.mute) break\n          note = event.noteNumber - (player.MIDIOffset || 0)\n          eventQueue.push({\n            event: event,\n            time: queueTime,\n            source: root.noteOn(channelId, event.noteNumber, event.velocity, delay),\n            interval: scheduleTracking(channelId, note, queuedTime + player.startDelay, offset - foffset, 144, event.velocity)\n          })\n          messages++\n          break\n        case 'noteOff':\n          if (channel.mute) break\n          note = event.noteNumber - (player.MIDIOffset || 0)\n          eventQueue.push({\n            event: event,\n            time: queueTime,\n            source: root.noteOff(channelId, event.noteNumber, delay),\n            interval: scheduleTracking(channelId, note, queuedTime, offset - foffset, 128, 0)\n          })\n          break\n        default:\n          break\n      }\n    }\n    // /\n    onsuccess && onsuccess(eventQueue)\n  }\n\n  var stopAudio = function () {\n    var ctx = getContext()\n    player.playing = false\n    player.restart += (ctx.currentTime - startTime) * 1000\n    // stop the audio, and intervals\n    while (eventQueue.length) {\n      let o = eventQueue.pop()\n      window.clearInterval(o.interval)\n      if (!o.source) continue // is not webaudio\n      if (typeof (o.source) === 'number') {\n        window.clearTimeout(o.source)\n      } else { // webaudio\n        o.source.disconnect(0)\n      }\n    }\n    // run callback to cancel any notes still playing\n    for (var key in noteRegistrar) {\n      let o = noteRegistrar[key]\n      if (noteRegistrar[key].message === 144 && onMidiEvent) {\n        onMidiEvent({\n          channel: o.channel,\n          note: o.note,\n          now: o.now,\n          end: o.end,\n          message: 128,\n          velocity: o.velocity\n        })\n      }\n    }\n    // reset noteRegistrar\n    noteRegistrar = {}\n  }\n})()\n","export * from './midifile'\nexport * from './replayer'\n","/**\n * class to parse the .mid file format\n * (depends on _stream.js)\n */\n\nimport Stream from './_stream'\n\nexport function MidiFile (data) {\n  var lastEventTypeByte\n\n  function readChunk (stream) {\n    var id = stream.read(4)\n    var length = stream.readInt32()\n    return {\n      'id': id,\n      'length': length,\n      'data': stream.read(length)\n    }\n  }\n\n  function readEvent (stream) {\n    var event = {}\n    event.deltaTime = stream.readVarInt()\n    var eventTypeByte = stream.readInt8()\n    if ((eventTypeByte & 0xf0) === 0xf0) {\n      /* system / meta event */\n      if (eventTypeByte === 0xff) {\n        /* meta event */\n        event.type = 'meta'\n        var subtypeByte = stream.readInt8()\n        let length = stream.readVarInt()\n        switch (subtypeByte) {\n          case 0x00:\n            event.subtype = 'sequenceNumber'\n            if (length !== 2) throw new Error('Expected length for sequenceNumber event is 2, got ' + length)\n            event.number = stream.readInt16()\n            return event\n          case 0x01:\n            event.subtype = 'text'\n            event.text = stream.read(length)\n            return event\n          case 0x02:\n            event.subtype = 'copyrightNotice'\n            event.text = stream.read(length)\n            return event\n          case 0x03:\n            event.subtype = 'trackName'\n            event.text = stream.read(length)\n            return event\n          case 0x04:\n            event.subtype = 'instrumentName'\n            event.text = stream.read(length)\n            return event\n          case 0x05:\n            event.subtype = 'lyrics'\n            event.text = stream.read(length)\n            return event\n          case 0x06:\n            event.subtype = 'marker'\n            event.text = stream.read(length)\n            return event\n          case 0x07:\n            event.subtype = 'cuePoint'\n            event.text = stream.read(length)\n            return event\n          case 0x20:\n            event.subtype = 'midiChannelPrefix'\n            if (length !== 1) throw new Error('Expected length for midiChannelPrefix event is 1, got ' + length)\n            event.channel = stream.readInt8()\n            return event\n          case 0x2f:\n            event.subtype = 'endOfTrack'\n            if (length !== 0) throw new Error('Expected length for endOfTrack event is 0, got ' + length)\n            return event\n          case 0x51:\n            event.subtype = 'setTempo'\n            if (length !== 3) throw new Error('Expected length for setTempo event is 3, got ' + length)\n            event.microsecondsPerBeat = (\n              (stream.readInt8() << 16) +\n              (stream.readInt8() << 8) +\n              stream.readInt8()\n            )\n            return event\n          case 0x54:\n            event.subtype = 'smpteOffset'\n            if (length !== 5) throw new Error('Expected length for smpteOffset event is 5, got ' + length)\n            var hourByte = stream.readInt8()\n            event.frameRate = {\n              0x00: 24, 0x20: 25, 0x40: 29, 0x60: 30\n            }[hourByte & 0x60]\n            event.hour = hourByte & 0x1f\n            event.min = stream.readInt8()\n            event.sec = stream.readInt8()\n            event.frame = stream.readInt8()\n            event.subframe = stream.readInt8()\n            return event\n          case 0x58:\n            event.subtype = 'timeSignature'\n            if (length !== 4) throw new Error('Expected length for timeSignature event is 4, got ' + length)\n            event.numerator = stream.readInt8()\n            event.denominator = Math.pow(2, stream.readInt8())\n            event.metronome = stream.readInt8()\n            event.thirtyseconds = stream.readInt8()\n            return event\n          case 0x59:\n            event.subtype = 'keySignature'\n            if (length !== 2) throw new Error('Expected length for keySignature event is 2, got ' + length)\n            event.key = stream.readInt8(true)\n            event.scale = stream.readInt8()\n            return event\n          case 0x7f:\n            event.subtype = 'sequencerSpecific'\n            event.data = stream.read(length)\n            return event\n          default:\n            // console.log(\"Unrecognised meta event subtype: \" + subtypeByte)\n            event.subtype = 'unknown'\n            event.data = stream.read(length)\n            return event\n        }\n        // event.data = stream.read(length)\n        // return event\n      } else if (eventTypeByte === 0xf0) {\n        event.type = 'sysEx'\n        let length = stream.readVarInt()\n        event.data = stream.read(length)\n        return event\n      } else if (eventTypeByte === 0xf7) {\n        event.type = 'dividedSysEx'\n        let length = stream.readVarInt()\n        event.data = stream.read(length)\n        return event\n      } else {\n        throw new Error('Unrecognised MIDI event type byte: ' + eventTypeByte)\n      }\n    } else {\n      /* channel event */\n      var param1\n      if ((eventTypeByte & 0x80) === 0) {\n        /* running status - reuse lastEventTypeByte as the event type.\n          eventTypeByte is actually the first parameter\n        */\n        param1 = eventTypeByte\n        eventTypeByte = lastEventTypeByte\n      } else {\n        param1 = stream.readInt8()\n        lastEventTypeByte = eventTypeByte\n      }\n      var eventType = eventTypeByte >> 4\n      event.channel = eventTypeByte & 0x0f\n      event.type = 'channel'\n      switch (eventType) {\n        case 0x08:\n          event.subtype = 'noteOff'\n          event.noteNumber = param1\n          event.velocity = stream.readInt8()\n          return event\n        case 0x09:\n          event.noteNumber = param1\n          event.velocity = stream.readInt8()\n          if (event.velocity === 0) {\n            event.subtype = 'noteOff'\n          } else {\n            event.subtype = 'noteOn'\n          }\n          return event\n        case 0x0a:\n          event.subtype = 'noteAftertouch'\n          event.noteNumber = param1\n          event.amount = stream.readInt8()\n          return event\n        case 0x0b:\n          event.subtype = 'controller'\n          event.controllerType = param1\n          event.value = stream.readInt8()\n          return event\n        case 0x0c:\n          event.subtype = 'programChange'\n          event.programNumber = param1\n          return event\n        case 0x0d:\n          event.subtype = 'channelAftertouch'\n          event.amount = param1\n          return event\n        case 0x0e:\n          event.subtype = 'pitchBend'\n          event.value = param1 + (stream.readInt8() << 7)\n          return event\n        default:\n          throw new Error('Unrecognised MIDI event type: ' + eventType)\n      /*\n      console.log(\"Unrecognised MIDI event type: \" + eventType)\n      stream.readInt8()\n      event.subtype = 'unknown'\n      return event\n      */\n      }\n    }\n  }\n\n  const stream = Stream(data)\n  var headerChunk = readChunk(stream)\n  if (headerChunk.id !== 'MThd' || headerChunk.length !== 6) {\n    throw new Error('Bad .mid file - header not found')\n  }\n  var headerStream = Stream(headerChunk.data)\n  var formatType = headerStream.readInt16()\n  var trackCount = headerStream.readInt16()\n  var timeDivision = headerStream.readInt16()\n  var ticksPerBeat\n\n  if (timeDivision & 0x8000) {\n    throw new Error('Expressing time division in SMTPE frames is not supported yet')\n  } else {\n    ticksPerBeat = timeDivision\n  }\n\n  var header = {\n    'formatType': formatType,\n    'trackCount': trackCount,\n    'ticksPerBeat': ticksPerBeat\n  }\n  var tracks = []\n  for (var i = 0; i < header.trackCount; i++) {\n    tracks[i] = []\n    var trackChunk = readChunk(stream)\n    if (trackChunk.id !== 'MTrk') {\n      throw new Error('Unexpected chunk - expected MTrk, got ' + trackChunk.id)\n    }\n    var trackStream = Stream(trackChunk.data)\n    while (!trackStream.eof()) {\n      var event = readEvent(trackStream)\n      tracks[i].push(event)\n    // console.log(event)\n    }\n  }\n\n  return {\n    'header': header,\n    'tracks': tracks\n  }\n}\n","/* Wrapper for accessing strings through sequential reads */\nexport default function (str) {\n  var position = 0\n\n  function read (length) {\n    var result = str.substr(position, length)\n    position += length\n    return result\n  }\n\n  /* read a big-endian 32-bit integer */\n  function readInt32 () {\n    var result = (\n    (str.charCodeAt(position) << 24) +\n    (str.charCodeAt(position + 1) << 16) +\n    (str.charCodeAt(position + 2) << 8) +\n    str.charCodeAt(position + 3))\n    position += 4\n    return result\n  }\n\n  /* read a big-endian 16-bit integer */\n  function readInt16 () {\n    var result = (\n    (str.charCodeAt(position) << 8) +\n    str.charCodeAt(position + 1))\n    position += 2\n    return result\n  }\n\n  /* read an 8-bit integer */\n  function readInt8 (signed) {\n    var result = str.charCodeAt(position)\n    if (signed && result > 127) result -= 256\n    position += 1\n    return result\n  }\n\n  function eof () {\n    return position >= str.length\n  }\n\n  /* read a MIDI-style variable-length integer\n    (big-endian value in groups of 7 bits,\n    with top bit set to signify that another byte follows)\n  */\n  function readVarInt () {\n    var result = 0\n    while (true) {\n      var b = readInt8()\n      if (b & 0x80) {\n        result += (b & 0x7f)\n        result <<= 7\n      } else {\n        /* b is the last byte */\n        return result + b\n      }\n    }\n  }\n\n  return {\n    'eof': eof,\n    'read': read,\n    'readInt32': readInt32,\n    'readInt16': readInt16,\n    'readInt8': readInt8,\n    'readVarInt': readVarInt\n  }\n}\n","const clone = function (o) {\n  if (typeof o !== 'object') return (o)\n  if (o === null) return (o)\n  var ret = (typeof o.length === 'number') ? [] : {}\n  for (var key in o) ret[key] = clone(o[key])\n  return ret\n}\n\nexport function Replayer (midiFile, timeWarp, eventProcessor, bpm) {\n  var trackStates = []\n  var beatsPerMinute = bpm || 120\n  var bpmOverride = !!bpm\n  var ticksPerBeat = midiFile.header.ticksPerBeat\n\n  for (let i = 0; i < midiFile.tracks.length; i++) {\n    trackStates[i] = {\n      'nextEventIndex': 0,\n      'ticksToNextEvent': (midiFile.tracks[i].length ? midiFile.tracks[i][0].deltaTime : null)\n    }\n  }\n\n  function getNextEvent () {\n    var ticksToNextEvent = null\n    var nextEventTrack = null\n    var nextEventIndex = null\n\n    for (let i = 0; i < trackStates.length; i++) {\n      if (\n        trackStates[i].ticksToNextEvent != null &&\n        (ticksToNextEvent == null || trackStates[i].ticksToNextEvent < ticksToNextEvent)\n      ) {\n        ticksToNextEvent = trackStates[i].ticksToNextEvent\n        nextEventTrack = i\n        nextEventIndex = trackStates[i].nextEventIndex\n      }\n    }\n    if (nextEventTrack != null) {\n      /* consume event from that track */\n      var nextEvent = midiFile.tracks[nextEventTrack][nextEventIndex]\n      if (midiFile.tracks[nextEventTrack][nextEventIndex + 1]) {\n        trackStates[nextEventTrack].ticksToNextEvent += midiFile.tracks[nextEventTrack][nextEventIndex + 1].deltaTime\n      } else {\n        trackStates[nextEventTrack].ticksToNextEvent = null\n      }\n      trackStates[nextEventTrack].nextEventIndex += 1\n      /* advance timings on all tracks by ticksToNextEvent */\n      for (let i = 0; i < trackStates.length; i++) {\n        if (trackStates[i].ticksToNextEvent != null) {\n          trackStates[i].ticksToNextEvent -= ticksToNextEvent\n        }\n      }\n      return {\n        'ticksToEvent': ticksToNextEvent,\n        'event': nextEvent,\n        'track': nextEventTrack\n      }\n    } else {\n      return null\n    }\n  }\n  //\n  var midiEvent\n  var temporal = []\n  ~(function processEvents () {\n    function processNext () {\n      if (!bpmOverride && midiEvent.event.type === 'meta' && midiEvent.event.subtype === 'setTempo') {\n        // tempo change events can occur anywhere in the middle and affect events that follow\n        beatsPerMinute = 60000000 / midiEvent.event.microsecondsPerBeat\n      }\n      // /\n      var beatsToGenerate = 0\n      var secondsToGenerate = 0\n      if (midiEvent.ticksToEvent > 0) {\n        beatsToGenerate = midiEvent.ticksToEvent / ticksPerBeat\n        secondsToGenerate = beatsToGenerate / (beatsPerMinute / 60)\n      }\n      // /\n      var time = (secondsToGenerate * 1000 * timeWarp) || 0\n      temporal.push([midiEvent, time])\n      midiEvent = getNextEvent()\n    }\n    // /\n    midiEvent = getNextEvent()\n    if (midiEvent) {\n      while (midiEvent) processNext(true)\n    }\n  })()\n\n  return {\n    getData: function () {\n      return clone(temporal)\n    }\n  }\n}\n","import './audiotag'\nimport './webaudio'\nimport './webmidi'\n","/*\n  ----------------------------------------------------------------------\n  AudioTag <audio> - OGG or MPEG Soundbank\n  ----------------------------------------------------------------------\n  http://dev.w3.org/html5/spec/Overview.html#the-audio-element\n  ----------------------------------------------------------------------\n*/\nimport root from '../root'\n\nwindow.Audio && (function () {\n  var midi = root.AudioTag = { api: 'audiotag' }\n  var noteToKey = {}\n  var volume = 127 // floating point\n  var bufferNid = -1 // current channel\n  var audioBuffers = [] // the audio channels\n  var notesOn = [] // instrumentId + noteId that is currently playing in each 'channel', for routing noteOff/chordOff calls\n  var notes = {} // the piano keys\n  for (let nid = 0; nid < 12; nid++) {\n    audioBuffers[nid] = new window.Audio()\n  }\n\n  var playChannel = function (channel, note) {\n    if (!root.channels[channel]) return\n    var instrument = root.channels[channel].instrument\n    var instrumentId = root.GM.byId[instrument].id\n    note = notes[note]\n    if (note) {\n      var instrumentNoteId = instrumentId + '' + note.id\n      var nid = (bufferNid + 1) % audioBuffers.length\n      var audio = audioBuffers[nid]\n      notesOn[ nid ] = instrumentNoteId\n      if (!root.Soundfont[instrumentId]) {\n        if (root.DEBUG) {\n          console.log('404', instrumentId)\n        }\n        return\n      }\n      audio.src = root.Soundfont[instrumentId][note.id]\n      audio.volume = volume / 127\n      audio.play()\n      bufferNid = nid\n    }\n  }\n\n  var stopChannel = function (channel, note) {\n    if (!root.channels[channel]) return\n    var instrument = root.channels[channel].instrument\n    var instrumentId = root.GM.byId[instrument].id\n    note = notes[note]\n    if (note) {\n      var instrumentNoteId = instrumentId + '' + note.id\n      for (var i = 0, len = audioBuffers.length; i < len; i++) {\n        var nid = (i + bufferNid + 1) % len\n        var cId = notesOn[nid]\n        if (cId && cId === instrumentNoteId) {\n          audioBuffers[nid].pause()\n          notesOn[nid] = null\n          return\n        }\n      }\n    }\n  }\n\n  midi.audioBuffers = audioBuffers\n  midi.send = function (data, delay) {}\n  midi.setController = function (channel, type, value, delay) {}\n  midi.setVolume = function (channel, n) {\n    volume = n // - should be channel specific volume\n  }\n\n  midi.programChange = function (channel, program) {\n    root.channels[channel].instrument = program\n  }\n\n  midi.pitchBend = function (channel, program, delay) {}\n\n  midi.noteOn = function (channel, note, velocity, delay) {\n    var id = noteToKey[note]\n    if (!notes[id]) return\n    if (delay) {\n      return setTimeout(function () {\n        playChannel(channel, id)\n      }, delay * 1000)\n    } else {\n      playChannel(channel, id)\n    }\n  }\n\n  midi.noteOff = function (channel, note, delay) {\n    //      var id = noteToKey[note]\n    //      if (!notes[id]) return\n    //      if (delay) {\n    //        return setTimeout(function() {\n    //          stopChannel(channel, id)\n    //        }, delay * 1000)\n    //      } else {\n    //        stopChannel(channel, id)\n    //      }\n  }\n\n  midi.chordOn = function (channel, chord, velocity, delay) {\n    for (var idx = 0; idx < chord.length; idx++) {\n      var n = chord[idx]\n      var id = noteToKey[n]\n      if (!notes[id]) continue\n      if (delay) {\n        return setTimeout(function () {\n          playChannel(channel, id)\n        }, delay * 1000)\n      } else {\n        playChannel(channel, id)\n      }\n    }\n  }\n\n  midi.chordOff = function (channel, chord, delay) {\n    for (var idx = 0; idx < chord.length; idx++) {\n      var n = chord[idx]\n      var id = noteToKey[n]\n      if (!notes[id]) continue\n      if (delay) {\n        return setTimeout(function () {\n          stopChannel(channel, id)\n        }, delay * 1000)\n      } else {\n        stopChannel(channel, id)\n      }\n    }\n  }\n\n  midi.stopAllNotes = function () {\n    for (var nid = 0, length = audioBuffers.length; nid < length; nid++) {\n      audioBuffers[nid].pause()\n    }\n  }\n\n  midi.connect = function (opts) {\n    root.setDefaultPlugin(midi)\n    // /\n    for (var key in root.keyToNote) {\n      noteToKey[root.keyToNote[key]] = key\n      notes[key] = {id: key}\n    }\n    // /\n    opts.onsuccess && opts.onsuccess()\n  }\n})()\n","/*\n  ----------------------------------------------------------\n  Web Audio API - OGG or MPEG Soundbank\n  ----------------------------------------------------------\n  http://webaudio.github.io/web-audio-api/\n  ----------------------------------------------------------\n*/\nimport root from '../root'\n\n// REF: http://stackoverflow.com/questions/21797299/convert-base64-string-to-arraybuffer\nfunction base64ToArrayBuffer (base64) {\n  var binaryString = window.atob(base64)\n  var len = binaryString.length\n  var bytes = new Uint8Array(len)\n  for (var i = 0; i < len; i++) {\n    bytes[i] = binaryString.charCodeAt(i)\n  }\n  return bytes.buffer\n}\n\nwindow.AudioContext && (function () {\n  // var audioContext = null // new AudioContext()\n  var useStreamingBuffer = false // !!audioContext.createMediaElementSource\n  var midi = root.WebAudio = { api: 'webaudio' }\n  var ctx // audio context\n  var sources = {}\n  var effects = {}\n  var masterVolume = 127\n  var audioBuffers = {}\n  // /\n  midi.audioBuffers = audioBuffers\n  midi.send = function (data, delay) {}\n  midi.setController = function (channelId, type, value, delay) {}\n\n  midi.setVolume = function (channelId, volume, delay) {\n    if (delay) {\n      setTimeout(function () {\n        masterVolume = volume\n      }, delay * 1000)\n    } else {\n      masterVolume = volume\n    }\n  }\n\n  midi.programChange = function (channelId, program, delay) {\n    //      if (delay) {\n    //        return setTimeout(function() {\n    //          var channel = root.channels[channelId]\n    //          channel.instrument = program\n    //        }, delay)\n    //      } else {\n    var channel = root.channels[channelId]\n    channel.instrument = program\n  //      }\n  }\n\n  midi.pitchBend = function (channelId, program, delay) {\n    //      if (delay) {\n    //        setTimeout(function() {\n    //          var channel = root.channels[channelId]\n    //          channel.pitchBend = program\n    //        }, delay)\n    //      } else {\n    var channel = root.channels[channelId]\n    channel.pitchBend = program\n  //      }\n  }\n\n  midi.noteOn = function (channelId, noteId, velocity, delay) {\n    delay = delay || 0\n\n    // / check whether the note exists\n    var channel = root.channels[channelId]\n    var instrument = channel.instrument\n    var bufferId = instrument + '' + noteId\n    var buffer = audioBuffers[bufferId]\n    if (!buffer) {\n      //        console.log(midi.GM.byId[instrument].id, instrument, channelId)\n      return\n    }\n\n    // / convert relative delay to absolute delay\n    if (delay < ctx.currentTime) {\n      delay += ctx.currentTime\n    }\n\n    // / create audio buffer\n    var source\n    if (useStreamingBuffer) {\n      source = ctx.createMediaElementSource(buffer)\n    } else { // XMLHTTP buffer\n      source = ctx.createBufferSource()\n      source.buffer = buffer\n    }\n\n    // / add effects to buffer\n    if (effects) {\n      var chain = source\n      for (var key in effects) {\n        chain.connect(effects[key].input)\n        chain = effects[key]\n      }\n    }\n\n    // / add gain + pitchShift\n    var gain = (velocity / 127) * (masterVolume / 127) * 2 - 1\n    source.connect(ctx.destination)\n    source.playbackRate.value = 1 // pitch shift\n    source.gainNode = ctx.createGain() // gain\n    source.gainNode.connect(ctx.destination)\n    source.gainNode.gain.value = Math.min(1.0, Math.max(-1.0, gain))\n    source.connect(source.gainNode)\n    // /\n    if (useStreamingBuffer) {\n      if (delay) {\n        return setTimeout(function () {\n          buffer.currentTime = 0\n          buffer.play()\n        }, delay * 1000)\n      } else {\n        buffer.currentTime = 0\n        buffer.play()\n      }\n    } else {\n      source.start(delay || 0)\n    }\n    // /\n    sources[channelId + '' + noteId] = source\n    // /\n    return source\n  }\n\n  midi.noteOff = function (channelId, noteId, delay) {\n    delay = delay || 0\n\n    // / check whether the note exists\n    var channel = root.channels[channelId]\n    var instrument = channel.instrument\n    var bufferId = instrument + '' + noteId\n    var buffer = audioBuffers[bufferId]\n    if (buffer) {\n      if (delay < ctx.currentTime) {\n        delay += ctx.currentTime\n      }\n      // /\n      var source = sources[channelId + '' + noteId]\n      if (source) {\n        if (source.gainNode) {\n          // @Miranet: 'the values of 0.2 and 0.3 could of course be used as\n          // a 'release' parameter for ADSR like time settings.'\n          // add { 'metadata': { release: 0.3 } } to soundfont files\n          var gain = source.gainNode.gain\n          gain.linearRampToValueAtTime(gain.value, delay)\n          gain.linearRampToValueAtTime(-1.0, delay + 0.3)\n        }\n        // /\n        if (useStreamingBuffer) {\n          if (delay) {\n            setTimeout(function () {\n              buffer.pause()\n            }, delay * 1000)\n          } else {\n            buffer.pause()\n          }\n        } else {\n          if (source.noteOff) {\n            source.noteOff(delay + 0.5)\n          } else {\n            source.stop(delay + 0.5)\n          }\n        }\n        // /\n        delete sources[channelId + '' + noteId]\n        // /\n        return source\n      }\n    }\n  }\n\n  midi.chordOn = function (channel, chord, velocity, delay) {\n    var res = {}\n    for (var n = 0, note, len = chord.length; n < len; n++) {\n      res[note = chord[n]] = midi.noteOn(channel, note, velocity, delay)\n    }\n    return res\n  }\n\n  midi.chordOff = function (channel, chord, delay) {\n    var res = {}\n    for (var n = 0, note, len = chord.length; n < len; n++) {\n      res[note = chord[n]] = midi.noteOff(channel, note, delay)\n    }\n    return res\n  }\n\n  midi.stopAllNotes = function () {\n    for (var sid in sources) {\n      var delay = 0\n      if (delay < ctx.currentTime) {\n        delay += ctx.currentTime\n      }\n      var source = sources[sid]\n      source.gain.linearRampToValueAtTime(1, delay)\n      source.gain.linearRampToValueAtTime(0, delay + 0.3)\n      if (source.noteOff) { // old api\n        source.noteOff(delay + 0.3)\n      } else { // new api\n        source.stop(delay + 0.3)\n      }\n      delete sources[sid]\n    }\n  }\n\n  midi.setEffects = function (list) {\n    if (ctx.tunajs) {\n      for (var n = 0; n < list.length; n++) {\n        var data = list[n]\n        var effect = new ctx.tunajs[data.type](data)\n        effect.connect(ctx.destination)\n        effects[data.type] = effect\n      }\n    } else {\n      return console.log('Effects module not installed.')\n    }\n  }\n\n  midi.connect = function (opts) {\n    root.setDefaultPlugin(midi)\n    midi.setContext(ctx || createAudioContext(), opts.onsuccess)\n  }\n\n  midi.getContext = function () {\n    return ctx\n  }\n\n  midi.setContext = function (newCtx, onload, onprogress, onerror) {\n    ctx = newCtx\n\n    // / tuna.js effects module - https://github.com/Dinahmoe/tuna\n    if (typeof window.Tuna !== 'undefined' && !ctx.tunajs) {\n      ctx.tunajs = new window.Tuna(ctx)\n    }\n\n    // / loading audio files\n    var urls = []\n    var notes = root.keyToNote\n    for (let key in notes) urls.push(key)\n    // /\n    var waitForEnd = function (instrument) {\n      for (let key in bufferPending) { // has pending items\n        if (bufferPending[key]) return\n      }\n      // /\n      if (onload) { // run onload once\n        onload()\n        onload = null\n      }\n    }\n    // /\n    var requestAudio = function (soundfont, instrumentId, index, key) {\n      var url = soundfont[key]\n      if (url) {\n        bufferPending[instrumentId]++\n        loadAudio(url, function (buffer) {\n          buffer.id = key\n          var noteId = root.keyToNote[key]\n          audioBuffers[instrumentId + '' + noteId] = buffer\n          // /\n          if (--bufferPending[instrumentId] === 0) {\n            // var percent = index / 87\n            //              console.log(midi.GM.byId[instrumentId], 'processing: ', percent)\n            soundfont.isLoaded = true\n            waitForEnd(instrument)\n          }\n        }, function (err) {\n          console.error(err)\n        })\n      }\n    }\n    // /\n    var bufferPending = {}\n    for (var instrument in root.Soundfont) {\n      var soundfont = root.Soundfont[instrument]\n      if (soundfont.isLoaded) {\n        continue\n      }\n      // /\n      var synth = root.GM.byName[instrument]\n      var instrumentId = synth.number\n      // /\n      bufferPending[instrumentId] = 0\n      // /\n      for (let index = 0; index < urls.length; index++) {\n        let key = urls[index]\n        requestAudio(soundfont, instrumentId, index, key)\n      }\n    }\n    // /\n    setTimeout(waitForEnd, 1)\n  }\n\n  /* Load audio file: streaming | base64 | arraybuffer\n  ---------------------------------------------------------------------- */\n  function loadAudio (url, onload, onerror) {\n    if (useStreamingBuffer) {\n      var audio = new window.Audio()\n      audio.src = url\n      audio.controls = false\n      audio.autoplay = false\n      audio.preload = false\n      audio.addEventListener('canplay', function () {\n        onload && onload(audio)\n      })\n      audio.addEventListener('error', function (err) {\n        onerror && onerror(err)\n      })\n      document.body.appendChild(audio)\n    } else if (url.indexOf('data:audio') === 0) { // Base64 string\n      var base64 = url.split(',')[1]\n      var buffer = base64ToArrayBuffer(base64)\n      ctx.decodeAudioData(buffer, onload, onerror)\n    } else { // XMLHTTP buffer\n      var request = new window.XMLHttpRequest()\n      request.open('GET', url, true)\n      request.responseType = 'arraybuffer'\n      request.onload = function () {\n        ctx.decodeAudioData(request.response, onload, onerror)\n      }\n      request.send()\n    }\n  }\n\n  function createAudioContext () {\n    return new (window.AudioContext || window.webkitAudioContext)()\n  }\n})()\n","/*\n  ----------------------------------------------------------------------\n  Web MIDI API - Native Soundbanks\n  ----------------------------------------------------------------------\n  http://webaudio.github.io/web-midi-api/\n  ----------------------------------------------------------------------\n*/\nimport root from '../root'\n\n(function () {\n  var plugin = null\n  var output = null\n  var midi = root.WebMIDI = {api: 'webmidi'}\n  midi.send = function (data, delay) { // set channel volume\n    output.send(data, delay * 1000)\n  }\n\n  midi.setController = function (channel, type, value, delay) {\n    output.send([channel, type, value], delay * 1000)\n  }\n\n  midi.setVolume = function (channel, volume, delay) { // set channel volume\n    output.send([0xB0 + channel, 0x07, volume], delay * 1000)\n  }\n\n  midi.programChange = function (channel, program, delay) { // change patch (instrument)\n    output.send([0xC0 + channel, program], delay * 1000)\n  }\n\n  midi.pitchBend = function (channel, program, delay) { // pitch bend\n    output.send([0xE0 + channel, program], delay * 1000)\n  }\n\n  midi.noteOn = function (channel, note, velocity, delay) {\n    output.send([0x90 + channel, note, velocity], delay * 1000)\n  }\n\n  midi.noteOff = function (channel, note, delay) {\n    output.send([0x80 + channel, note, 0], delay * 1000)\n  }\n\n  midi.chordOn = function (channel, chord, velocity, delay) {\n    for (var n = 0; n < chord.length; n++) {\n      var note = chord[n]\n      output.send([0x90 + channel, note, velocity], delay * 1000)\n    }\n  }\n\n  midi.chordOff = function (channel, chord, delay) {\n    for (var n = 0; n < chord.length; n++) {\n      var note = chord[n]\n      output.send([0x80 + channel, note, 0], delay * 1000)\n    }\n  }\n\n  midi.stopAllNotes = function () {\n    output.cancel()\n    for (var channel = 0; channel < 16; channel++) {\n      output.send([0xB0 + channel, 0x7B, 0])\n    }\n  }\n\n  midi.connect = function (opts) {\n    root.setDefaultPlugin(midi)\n    var errFunction = function (err) { // well at least we tried!\n      if (window.AudioContext) { // Chrome\n        opts.api = 'webaudio'\n      } else if (window.Audio) { // Firefox\n        opts.api = 'audiotag'\n      } else { // no support\n        return err\n      }\n      root.loadPlugin(opts)\n    }\n    // /\n    navigator.requestMIDIAccess().then(function (access) {\n      plugin = access\n      var pluginOutputs = plugin.outputs\n      if (typeof pluginOutputs === 'function') { // Chrome pre-43\n        output = pluginOutputs()[0]\n      } else { // Chrome post-43\n        output = pluginOutputs[0]\n      }\n      if (output === undefined) { // nothing there...\n        errFunction()\n      } else {\n        opts.onsuccess && opts.onsuccess()\n      }\n    }, errFunction)\n  }\n})()\n"],"sourceRoot":""}