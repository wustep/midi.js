{"version":3,"sources":["webpack://MIDI/webpack/universalModuleDefinition","webpack://MIDI/webpack/bootstrap","webpack://MIDI/./src/root.js","webpack://MIDI/./src/utils/audio-detect.js","webpack://MIDI/./src/utils/load-script.js","webpack://MIDI/./src/loader.js","webpack://MIDI/./src/utils/request.js","webpack://MIDI/./src/gm.js","webpack://MIDI/./src/jasmid/_stream.js","webpack://MIDI/./src/jasmid/replayer.js","webpack://MIDI/./src/plugins/webaudio.js","webpack://MIDI/./src/player.js","webpack://MIDI/./src/jasmid/midifile.js","webpack://MIDI/./src/plugins/audiotag.js","webpack://MIDI/./src/plugins/webmidi.js","webpack://MIDI/./src/index.js"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","supports","pending","canPlayThrough","src","body","document","audio","Audio","mime","split","id","setAttribute","addEventListener","removeChild","appendChild","_globalExists","path","parts","join","length","e","LoadScript","this","loaded","loading","add","config","that","url","urls","verify","doc","getElementsByTagName","testElement","element","test","onsuccess","getNext","hasError","batchTest","addElement","push","script","createElement","onreadystatechange","readyState","onload","onerror","removeTest","ret","onLoad","istrue","strictOrder","error","setTimeout","ID","loadScript","Soundfont","DEBUG","USE_XHR","soundfontUrl","loadPlugin","opts","navigator","requestMIDIAccess","Function","toString","indexOf","webmidi","plugins","audiotag","AudioContext","webkitAudioContext","webaudio","canPlayType","vorbis","mpeg","time","Date","getTime","interval","setInterval","now","clearInterval","audioDetect","audioFormat","hash","location","api","substr","connect","targetFormat","__api","__audioFormat","loadResource","instruments","instrument","GM","byId","format","WebMIDI","requestQueue","context","onprogress","waitForEnd","instrumentId","sendRequest","evt","progress","soundfontPath","data","method","headers","responseType","withCredentials","xhr","XMLHttpRequest","open","type","setRequestHeader","overrideMimeType","upload","total","totalBytes","lengthComputable","rawBytes","parseInt","getResponseHeader","isFinite","status","res","target","responseXML","responseText","JSON","parse","response","err","send","request","event","language","text","setDefaultPlugin","midi","map","clean","replace","toLowerCase","byName","byCategory","list","num","number","category","Piano","Organ","Guitar","Bass","Strings","Ensemble","Brass","Reed","Pipe","Ethnic","Percussive","getInstrument","channelId","channel","channels","setInstrument","program","delay","getMono","mono","setMono","truthy","getOmni","omni","setOmni","getSolo","solo","setSolo","pitchBend","mute","keyToNote","noteToKey","number2key","str","position","readInt8","signed","result","charCodeAt","eof","read","readInt32","readInt16","readVarInt","b","ctx","sources","effects","masterVolume","audioBuffers","Replayer","midiFile","timeWarp","eventProcessor","bpm","midiEvent","trackStates","beatsPerMinute","bpmOverride","ticksPerBeat","header","tracks","nextEventIndex","ticksToNextEvent","deltaTime","getNextEvent","nextEventTrack","nextEvent","ticksToEvent","track","temporal","processNext","subtype","microsecondsPerBeat","secondsToGenerate","getData","clone","Player","player","currentTime","endTime","restart","playing","startDelay","BPM","listeners","start","resume","startAudio","pause","tmp","stopAudio","stop","addListener","listener","removeListener","index","splice","clearAnimation","animationFrameId","cancelAnimationFrame","setAnimation","callback","tOurTime","tTheirTime","requestAnimationFrame","frame","minutes","t1","t2","end","events","noteRegistrar","loadMidiFile","replayer","lastEventTypeByte","readChunk","stream","readEvent","eventTypeByte","Error","subtypeByte","hourByte","frameRate","0","hour","min","sec","subframe","numerator","denominator","Math","pow","metronome","thirtyseconds","scale","param1","eventType","noteNumber","velocity","amount","controllerType","programNumber","Stream","headerChunk","headerStream","formatType","trackCount","timeDivision","trackChunk","trackStream","MidiFile","currentData","getLength","console","loadFile","file","atob","fetch","ff","mx","scc","String","fromCharCode","z","getFileInstruments","programs","queuedTime","__now","eventQueue","startTime","scheduleTracking","note","offset","message","forEach","shift","getContext","WebAudio","totalTime","fromCache","messages","foffset","performance","obj","queueTime","source","setController","programChange","MIDIOffset","noteOn","noteOff","pop","clearTimeout","disconnect","AudioTag","volume","bufferNid","notesOn","notes","nid","playChannel","instrumentNoteId","log","play","stopChannel","len","cId","setVolume","chordOn","chord","idx","chordOff","stopAllNotes","noteId","bufferId","buffer","createBufferSource","chain","input","gain","destination","playbackRate","gainNode","createGain","max","linearRampToValueAtTime","sid","setEffects","tunajs","effect","setContext","newCtx","Tuna","bufferPending","requestAudio","soundfont","base64","binaryString","bytes","Uint8Array","base64ToArrayBuffer","decodeAudioData","loadAudio","isLoaded","output","cancel","errFunction","then","access","pluginOutputs","outputs","undefined","MIDI"],"mappings":"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","file":"midi.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"MIDI\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"MIDI\"] = factory();\n\telse\n\t\troot[\"MIDI\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n","module.exports = {};\n","/*\n *----------------------------------------------------------\n *midi.audioDetect : 0.3.2 : 2015-03-26\n *----------------------------------------------------------\n *https://github.com/mudcube/midi.js\n *----------------------------------------------------------\n *Probably, Maybe, No... Absolutely!\n *Test to see what types of <audio> MIME types are playable by the browser.\n *----------------------------------------------------------\n */\n\nconst supports = {}; // object of supported file types\nlet pending = 0; // pending file types to process\nconst canPlayThrough = function (src) {\n  // check whether format plays through\n  pending++;\n  const { body } = document;\n  const audio = new window.Audio();\n  const mime = src.split(';')[0];\n  audio.id = 'audio';\n  audio.setAttribute('preload', 'auto');\n  audio.setAttribute('audiobuffer', true);\n  audio.addEventListener(\n    'error',\n    function () {\n      body.removeChild(audio);\n      supports[mime] = false;\n      pending--;\n    },\n    false\n  );\n  audio.addEventListener(\n    'canplaythrough',\n    function () {\n      body.removeChild(audio);\n      supports[mime] = true;\n      pending--;\n    },\n    false\n  );\n  audio.src = `data:${src}`;\n  body.appendChild(audio);\n};\n\nexport const audioDetect = function (onsuccess) {\n  // / detect jazz-midi plugin\n  if (navigator.requestMIDIAccess) {\n    const isNative = Function.prototype.toString\n      .call(navigator.requestMIDIAccess)\n      .indexOf('[native code]');\n    if (isNative) {\n      // has native midiapi support\n      supports.webmidi = true;\n    } else {\n      // check for jazz plugin midiapi support\n      for (let n = 0; navigator.plugins.length > n; n++) {\n        const plugin = navigator.plugins[n];\n        if (plugin.name.indexOf('Jazz-Plugin') >= 0) {\n          supports.webmidi = true;\n        }\n      }\n    }\n  }\n\n  // / check whether <audio> tag is supported\n  if (typeof window.Audio === 'undefined') {\n    return onsuccess({});\n  }\n  supports.audiotag = true;\n\n  // / check for webaudio api support\n  if (window.AudioContext || window.webkitAudioContext) {\n    supports.webaudio = true;\n  }\n\n  // / check whether canPlayType is supported\n  const audio = new window.Audio();\n  if (typeof audio.canPlayType === 'undefined') {\n    return onsuccess(supports);\n  }\n\n  // / see what we can learn from the browser\n  let vorbis = audio.canPlayType('audio/ogg; codecs=\"vorbis\"');\n  vorbis = vorbis === 'probably' || vorbis === 'maybe';\n  let mpeg = audio.canPlayType('audio/mpeg');\n  mpeg = mpeg === 'probably' || mpeg === 'maybe';\n  // maybe nothing is supported\n  if (!vorbis && !mpeg) {\n    onsuccess(supports);\n    return;\n  }\n\n  // / or maybe something is supported\n  if (vorbis)\n    canPlayThrough(\n      'audio/ogg;base64,T2dnUwACAAAAAAAAAADqnjMlAAAAAOyyzPIBHgF2b3JiaXMAAAAAAUAfAABAHwAAQB8AAEAfAACZAU9nZ1MAAAAAAAAAAAAA6p4zJQEAAAANJGeqCj3//////////5ADdm9yYmlzLQAAAFhpcGguT3JnIGxpYlZvcmJpcyBJIDIwMTAxMTAxIChTY2hhdWZlbnVnZ2V0KQAAAAABBXZvcmJpcw9CQ1YBAAABAAxSFCElGVNKYwiVUlIpBR1jUFtHHWPUOUYhZBBTiEkZpXtPKpVYSsgRUlgpRR1TTFNJlVKWKUUdYxRTSCFT1jFloXMUS4ZJCSVsTa50FkvomWOWMUYdY85aSp1j1jFFHWNSUkmhcxg6ZiVkFDpGxehifDA6laJCKL7H3lLpLYWKW4q91xpT6y2EGEtpwQhhc+211dxKasUYY4wxxsXiUyiC0JBVAAABAABABAFCQ1YBAAoAAMJQDEVRgNCQVQBABgCAABRFcRTHcRxHkiTLAkJDVgEAQAAAAgAAKI7hKJIjSZJkWZZlWZameZaouaov+64u667t6roOhIasBACAAAAYRqF1TCqDEEPKQ4QUY9AzoxBDDEzGHGNONKQMMogzxZAyiFssLqgQBKEhKwKAKAAAwBjEGGIMOeekZFIi55iUTkoDnaPUUcoolRRLjBmlEluJMYLOUeooZZRCjKXFjFKJscRUAABAgAMAQICFUGjIigAgCgCAMAYphZRCjCnmFHOIMeUcgwwxxiBkzinoGJNOSuWck85JiRhjzjEHlXNOSuekctBJyaQTAAAQ4AAAEGAhFBqyIgCIEwAwSJKmWZomipamiaJniqrqiaKqWp5nmp5pqqpnmqpqqqrrmqrqypbnmaZnmqrqmaaqiqbquqaquq6nqrZsuqoum65q267s+rZru77uqapsm6or66bqyrrqyrbuurbtS56nqqKquq5nqq6ruq5uq65r25pqyq6purJtuq4tu7Js664s67pmqq5suqotm64s667s2rYqy7ovuq5uq7Ks+6os+75s67ru2rrwi65r66os674qy74x27bwy7ouHJMnqqqnqq7rmarrqq5r26rr2rqmmq5suq4tm6or26os67Yry7aumaosm64r26bryrIqy77vyrJui67r66Ys67oqy8Lu6roxzLat+6Lr6roqy7qvyrKuu7ru+7JuC7umqrpuyrKvm7Ks+7auC8us27oxuq7vq7It/KosC7+u+8Iy6z5jdF1fV21ZGFbZ9n3d95Vj1nVhWW1b+V1bZ7y+bgy7bvzKrQvLstq2scy6rSyvrxvDLux8W/iVmqratum6um7Ksq/Lui60dd1XRtf1fdW2fV+VZd+3hV9pG8OwjK6r+6os68Jry8ov67qw7MIvLKttK7+r68ow27qw3L6wLL/uC8uq277v6rrStXVluX2fsSu38QsAABhwAAAIMKEMFBqyIgCIEwBAEHIOKQahYgpCCKGkEEIqFWNSMuakZM5JKaWUFEpJrWJMSuaclMwxKaGUlkopqYRSWiqlxBRKaS2l1mJKqcVQSmulpNZKSa2llGJMrcUYMSYlc05K5pyUklJrJZXWMucoZQ5K6iCklEoqraTUYuacpA46Kx2E1EoqMZWUYgupxFZKaq2kFGMrMdXUWo4hpRhLSrGVlFptMdXWWqs1YkxK5pyUzDkqJaXWSiqtZc5J6iC01DkoqaTUYiopxco5SR2ElDLIqJSUWiupxBJSia20FGMpqcXUYq4pxRZDSS2WlFosqcTWYoy1tVRTJ6XFklKMJZUYW6y5ttZqDKXEVkqLsaSUW2sx1xZjjqGkFksrsZWUWmy15dhayzW1VGNKrdYWY40x5ZRrrT2n1mJNMdXaWqy51ZZbzLXnTkprpZQWS0oxttZijTHmHEppraQUWykpxtZara3FXEMpsZXSWiypxNhirLXFVmNqrcYWW62ltVprrb3GVlsurdXcYqw9tZRrrLXmWFNtBQAADDgAAASYUAYKDVkJAEQBAADGMMYYhEYpx5yT0ijlnHNSKucghJBS5hyEEFLKnINQSkuZcxBKSSmUklJqrYVSUmqttQIAAAocAAACbNCUWByg0JCVAEAqAIDBcTRNFFXVdX1fsSxRVFXXlW3jVyxNFFVVdm1b+DVRVFXXtW3bFn5NFFVVdmXZtoWiqrqybduybgvDqKqua9uybeuorqvbuq3bui9UXVmWbVu3dR3XtnXd9nVd+Bmzbeu2buu+8CMMR9/4IeTj+3RCCAAAT3AAACqwYXWEk6KxwEJDVgIAGQAAgDFKGYUYM0gxphhjTDHGmAAAgAEHAIAAE8pAoSErAoAoAADAOeecc84555xzzjnnnHPOOeecc44xxhhjjDHGGGOMMcYYY4wxxhhjjDHGGGOMMcYYY0wAwE6EA8BOhIVQaMhKACAcAABACCEpKaWUUkoRU85BSSmllFKqFIOMSkoppZRSpBR1lFJKKaWUIqWgpJJSSimllElJKaWUUkoppYw6SimllFJKKaWUUkoppZRSSimllFJKKaWUUkoppZRSSimllFJKKaWUUkoppZRSSimllFJKKaWUUkoppZRSSimllFJKKaVUSimllFJKKaWUUkoppRQAYPLgAACVYOMMK0lnhaPBhYasBAByAwAAhRiDEEJpraRUUkolVc5BKCWUlEpKKZWUUqqYgxBKKqmlklJKKbXSQSihlFBKKSWUUkooJYQQSgmhlFRCK6mEUkoHoYQSQimhhFRKKSWUzkEoIYUOQkmllNRCSB10VFIpIZVSSiklpZQ6CKGUklJLLZVSWkqpdBJSKamV1FJqqbWSUgmhpFZKSSWl0lpJJbUSSkklpZRSSymFVFJJJYSSUioltZZaSqm11lJIqZWUUkqppdRSSiWlkEpKqZSSUmollZRSaiGVlEpJKaTUSimlpFRCSamlUlpKLbWUSkmptFRSSaWUlEpJKaVSSksppRJKSqmllFpJKYWSUkoplZJSSyW1VEoKJaWUUkmptJRSSymVklIBAEAHDgAAAUZUWoidZlx5BI4oZJiAAgAAQABAgAkgMEBQMApBgDACAQAAAADAAAAfAABHARAR0ZzBAUKCwgJDg8MDAAAAAAAAAAAAAACAT2dnUwAEAAAAAAAAAADqnjMlAgAAADzQPmcBAQA='\n    );\n  if (mpeg)\n    canPlayThrough(\n      'audio/mpeg;base64,/+MYxAAAAANIAUAAAASEEB/jwOFM/0MM/90b/+RhST//w4NFwOjf///PZu////9lns5GFDv//l9GlUIEEIAAAgIg8Ir/JGq3/+MYxDsLIj5QMYcoAP0dv9HIjUcH//yYSg+CIbkGP//8w0bLVjUP///3Z0x5QCAv/yLjwtGKTEFNRTMuOTeqqqqqqqqqqqqq/+MYxEkNmdJkUYc4AKqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq'\n    );\n\n  // / lets find out!\n  const time = new Date().getTime();\n  const interval = window.setInterval(function () {\n    const now = new Date().getTime();\n    const maxExecution = now - time > 5000;\n    if (!pending || maxExecution) {\n      window.clearInterval(interval);\n      onsuccess(supports);\n    }\n  }, 1);\n};\n","/*\n * -----------------------------------------------------------\n * loadScript.js : 0.1.4 : 2014/02/12 : http://mudcu.be\n * -----------------------------------------------------------\n * Copyright 2011-2014 Mudcube. All rights reserved.\n * -----------------------------------------------------------\n * // No verification\n * loadScript.add(\"../js/jszip/jszip.js\")\n * // Strict loading order and verification.\n * loadScript.add({\n *   strictOrder: true,\n *   urls: [\n *     {\n *       url: \"../js/jszip/jszip.js\",\n *       verify: \"JSZip\",\n *       onsuccess: function() {\n *         console.log(1)\n *       }\n *     },\n *     {\n *       url: \"../inc/downloadify/js/swfobject.js\",\n *       verify: \"swfobject\",\n *       onsuccess: function() {\n *         console.log(2)\n *       }\n *     }\n *   ],\n *   onsuccess: function() {\n *     console.log(3)\n *   }\n * })\n * // Just verification.\n * loadScript.add({\n *   url: \"../js/jszip/jszip.js\",\n *   verify: \"JSZip\",\n *   onsuccess: function() {\n *     console.log(1)\n *   }\n * })\n */\n\nconst _globalExists = function (path, root) {\n  try {\n    path = path\n      .split('\"')\n      .join('')\n      .split(\"'\")\n      .join('')\n      .split(']')\n      .join('')\n      .split('[')\n      .join('.');\n    const parts = path.split('.');\n    const { length } = parts;\n    let object = root || window;\n    for (let n = 0; n < length; n++) {\n      const key = parts[n];\n      if (object[key] == null) {\n        return false;\n      }\n      //\n      object = object[key];\n    }\n    return true;\n  } catch (e) {\n    return false;\n  }\n};\n\nconst LoadScript = function () {\n  this.loaded = {};\n  this.loading = {};\n  return this;\n};\n\nLoadScript.prototype.add = function (config) {\n  const that = this;\n  if (typeof config === 'string') {\n    config = { url: config };\n  }\n  let { urls } = config;\n  if (typeof urls === 'undefined') {\n    urls = [\n      {\n        url: config.url,\n        verify: config.verify,\n      },\n    ];\n  }\n  // / adding the elements to the head\n  const doc = document.getElementsByTagName('head')[0];\n  // /\n  const testElement = function (element, test) {\n    if (that.loaded[element.url]) return;\n    if (test && _globalExists(test) === false) return;\n    that.loaded[element.url] = true;\n    //\n    if (that.loading[element.url]) that.loading[element.url]();\n    delete that.loading[element.url];\n    //\n    if (element.onsuccess) element.onsuccess();\n    if (typeof getNext !== 'undefined') getNext();\n  };\n  // /\n  let hasError = false;\n  let batchTest = [];\n  const addElement = function (element) {\n    if (typeof element === 'string') {\n      element = {\n        url: element,\n        verify: config.verify,\n      };\n    }\n    if (/([\\w\\d.\\[\\]'\"])$/.test(element.verify)) {\n      // check whether its a variable reference\n      const verify = (element.test = element.verify);\n      if (typeof verify === 'object') {\n        for (let n = 0; n < verify.length; n++) {\n          batchTest.push(verify[n]);\n        }\n      } else {\n        batchTest.push(verify);\n      }\n    }\n    if (that.loaded[element.url]) return;\n    const script = document.createElement('script');\n    script.onreadystatechange = function () {\n      if (this.readyState !== 'loaded' && this.readyState !== 'complete')\n        return;\n      testElement(element);\n    };\n    script.onload = function () {\n      testElement(element);\n    };\n    script.onerror = function () {\n      hasError = true;\n      delete that.loading[element.url];\n      if (typeof element.test === 'object') {\n        for (const key in element.test) {\n          removeTest(element.test[key]);\n        }\n      } else {\n        removeTest(element.test);\n      }\n    };\n    script.setAttribute('type', 'text/javascript');\n    script.setAttribute('src', element.url);\n    doc.appendChild(script);\n    that.loading[element.url] = function () {};\n  };\n  // / checking to see whether everything loaded properly\n  var removeTest = function (test) {\n    const ret = [];\n    for (let n = 0; n < batchTest.length; n++) {\n      if (batchTest[n] === test) continue;\n      ret.push(batchTest[n]);\n    }\n    batchTest = ret;\n  };\n  var onLoad = function (element) {\n    if (element) {\n      testElement(element, element.test);\n    } else {\n      for (let n = 0; n < urls.length; n++) {\n        testElement(urls[n], urls[n].test);\n      }\n    }\n    let istrue = true;\n    for (let n = 0; n < batchTest.length; n++) {\n      if (_globalExists(batchTest[n]) === false) {\n        istrue = false;\n      }\n    }\n    if (!config.strictOrder && istrue) {\n      // finished loading all the requested scripts\n      if (hasError) {\n        if (config.error) {\n          config.error();\n        }\n      } else if (config.onsuccess) {\n        config.onsuccess();\n      }\n    } else {\n      // keep calling back the function\n      setTimeout(function () {\n        // - should get slower over time?\n        onLoad(element);\n      }, 10);\n    }\n  };\n  // / loading methods;  strict ordering or loose ordering\n  if (config.strictOrder) {\n    let ID = -1;\n    var getNext = function () {\n      ID++;\n      if (!urls[ID]) {\n        // all elements are loaded\n        if (hasError) {\n          if (config.error) {\n            config.error();\n          }\n        } else if (config.onsuccess) {\n          config.onsuccess();\n        }\n      } else {\n        // loading new script\n        const element = urls[ID];\n        const { url } = element;\n        if (that.loading[url]) {\n          // already loading from another call (attach to event)\n          that.loading[url] = function () {\n            if (element.onsuccess) element.onsuccess();\n            getNext();\n          };\n        } else if (!that.loaded[url]) {\n          // create script element\n          addElement(element);\n          onLoad(element);\n        } else {\n          // it's already been successfully loaded\n          getNext();\n        }\n      }\n    };\n    getNext();\n  } else {\n    // loose ordering\n    for (let ID = 0; ID < urls.length; ID++) {\n      addElement(urls[ID]);\n      onLoad(urls[ID]);\n    }\n  }\n};\n\nexport const loadScript = new LoadScript();\n","/*\n * ----------------------------------------------------------\n * root.Plugin : 0.3.4 : 2015-03-26\n * ----------------------------------------------------------\n * https://github.com/mudcube/root.js\n * ----------------------------------------------------------\n * Inspired by javax.sound.midi (albeit a super simple version):\n *   http://docs.oracle.com/javase/6/docs/api/javax/sound/midi/package-summary.html\n * ----------------------------------------------------------\n * Technologies\n * ----------------------------------------------------------\n *  Web MIDI API - no native support yet (jazzplugin)\n *  Web Audio API - firefox 25+, chrome 10+, safari 6+, opera 15+\n *  HTML5 Audio Tag - ie 9+, firefox 3.5+, chrome 4+, safari 4+, opera 9.5+, ios 4+, android 2.3+\n * ----------------------------------------------------------\n */\n\nimport root from './root';\nimport { audioDetect, loadScript, request } from './utils';\n\nroot.loadScript = loadScript;\nroot.Soundfont = {};\nroot.DEBUG = true;\nroot.USE_XHR = true;\nroot.soundfontUrl = './soundfont/';\n\n/*\n * root.loadPlugin({\n *   onsuccess: function() { },\n *   onprogress: function(state, percent) { },\n *   targetFormat: 'mp3', // optionally can force to use MP3 (for instance on mobile networks)\n *   instrument: 'acoustic_grand_piano', // or 1 (default)\n *   instruments: [ 'acoustic_grand_piano', 'acoustic_guitar_nylon' ] // or multiple instruments\n * })\n */\n\nroot.loadPlugin = function (opts) {\n  if (typeof opts === 'function') {\n    opts = { onsuccess: opts };\n  }\n\n  root.soundfontUrl = opts.soundfontUrl || root.soundfontUrl;\n\n  // / Detect the best type of audio to use\n  audioDetect(function (supports) {\n    const { hash } = window.location;\n    let api = '';\n\n    // / use the most appropriate plugin if not specified\n    if (supports[opts.api]) {\n      api = opts.api;\n    } else if (supports[hash.substr(1)]) {\n      api = hash.substr(1);\n    } else if (supports.webmidi) {\n      api = 'webmidi';\n    } else if (window.AudioContext) {\n      // Chrome\n      api = 'webaudio';\n    } else if (window.Audio) {\n      // Firefox\n      api = 'audiotag';\n    }\n\n    if (connect[api]) {\n      // / use audio/ogg when supported\n      let audioFormat;\n      if (opts.targetFormat) {\n        audioFormat = opts.targetFormat;\n      } else {\n        // use best quality\n        audioFormat = supports['audio/ogg'] ? 'ogg' : 'mp3';\n      }\n\n      // / load the specified plugin\n      root.__api = api;\n      root.__audioFormat = audioFormat;\n      root.supports = supports;\n      root.loadResource(opts);\n    }\n  });\n};\n\n/*\n *root.loadResource({\n *  onsuccess: function() { },\n *  onprogress: function(state, percent) { },\n *  instrument: 'banjo'\n *})\n */\n\nroot.loadResource = function (opts) {\n  let instruments =\n    opts.instruments || opts.instrument || 'acoustic_grand_piano';\n  // /\n  if (typeof instruments !== 'object') {\n    if (instruments || instruments === 0) {\n      instruments = [instruments];\n    } else {\n      instruments = [];\n    }\n  }\n  // / convert numeric ids into strings\n  for (let i = 0; i < instruments.length; i++) {\n    const instrument = instruments[i];\n    if (instrument === +instrument) {\n      // is numeric\n      if (root.GM.byId[instrument]) {\n        instruments[i] = root.GM.byId[instrument].id;\n      }\n    }\n  }\n  // /\n  opts.format = root.__audioFormat;\n  opts.instruments = instruments;\n  // /\n  connect[root.__api](opts);\n};\n\nvar connect = {\n  webmidi(opts) {\n    // cant wait for this to be standardized!\n    root.WebMIDI.connect(opts);\n  },\n  audiotag(opts) {\n    /*\n     * works ok, kinda like a drunken tuna fish, across the board\n     * http://caniuse.com/audio\n     */\n    requestQueue(opts, 'AudioTag');\n  },\n  webaudio(opts) {\n    /*\n     * works awesome! safari, chrome and firefox support\n     * http://caniuse.com/web-audio\n     */\n    requestQueue(opts, 'WebAudio');\n  },\n};\n\nvar requestQueue = function (opts, context) {\n  const audioFormat = opts.format;\n  const { instruments } = opts;\n  const { onprogress } = opts;\n  const { onerror } = opts;\n  // /\n  const { length } = instruments;\n  let pending = length;\n  const waitForEnd = function () {\n    if (!--pending) {\n      onprogress && onprogress('load', 1.0);\n      root[context].connect(opts);\n    }\n  };\n  // /\n  for (let i = 0; i < length; i++) {\n    var instrumentId = instruments[i];\n    if (root.Soundfont[instrumentId]) {\n      // already loaded\n      waitForEnd();\n    } else {\n      // needs to be requested\n      sendRequest(\n        instruments[i],\n        audioFormat,\n        function (evt, progress) {\n          const fileProgress = progress / length;\n          const queueProgress = (length - pending) / length;\n          onprogress &&\n            onprogress('load', fileProgress + queueProgress, instrumentId);\n        },\n        function () {\n          waitForEnd();\n        },\n        onerror\n      );\n    }\n  }\n};\n\nvar sendRequest = function (\n  instrumentId,\n  audioFormat,\n  onprogress,\n  onsuccess,\n  onerror\n) {\n  const soundfontPath = `${root.soundfontUrl + instrumentId}-${audioFormat}.js`;\n  if (root.USE_XHR) {\n    request({\n      url: soundfontPath,\n      format: 'text',\n      onerror,\n      onprogress,\n      onsuccess(event, responseText) {\n        const script = document.createElement('script');\n        script.language = 'javascript';\n        script.type = 'text/javascript';\n        script.text = responseText;\n        document.body.appendChild(script);\n        onsuccess();\n      },\n    });\n  } else {\n    loadScript.add({\n      url: soundfontPath,\n      verify: `root.Soundfont[\"${instrumentId}\"]`,\n      onerror,\n      onsuccess() {\n        onsuccess();\n      },\n    });\n  }\n};\n\nroot.setDefaultPlugin = function (midi) {\n  for (const key in midi) {\n    root[key] = midi[key];\n  }\n};\n","/*\n * ----------------------------------------------------------\n * Request : 0.1.1 : 2015-03-26\n * ----------------------------------------------------------\n * request({\n *   url: './dir/something.extension',\n *   data: 'test!',\n *   format: 'text', // text | xml | json | binary\n *   responseType: 'text', // arraybuffer | blob | document | json | text\n *   headers: {},\n *   withCredentials: true, // true | false\n *\n *   onerror: function(evt, percent) {\n *     console.log(evt)\n *   },\n *   onsuccess: function(evt, responseText) {\n *     console.log(responseText)\n *   },\n *   onprogress: function(evt, percent) {\n *     percent = Math.round(percent * 100)\n *     loader.create('thread', 'loading... ', percent)\n *   }\n * })\n */\n\nexport function request(opts, onsuccess, onerror, onprogress) {\n  if (typeof opts === 'string') opts = { url: opts };\n  const { data } = opts;\n  const { url } = opts;\n  const method = opts.method || (opts.data ? 'POST' : 'GET');\n  const { format } = opts;\n  const { headers } = opts;\n  const { responseType } = opts;\n  const withCredentials = opts.withCredentials || false;\n  const xhr = new window.XMLHttpRequest();\n  onsuccess = onsuccess || opts.onsuccess;\n  onerror = onerror || opts.onerror;\n  onprogress = onprogress || opts.onprogress;\n  xhr.open(method, url, true);\n  if (headers) {\n    for (const type in headers) {\n      xhr.setRequestHeader(type, headers[type]);\n    }\n  } else if (data) {\n    // set the default headers for POST\n    xhr.setRequestHeader('Content-type', 'application/x-www-form-urlencoded');\n  }\n  if (format === 'binary') {\n    // - default to responseType=\"blob\" when supported\n    if (xhr.overrideMimeType) {\n      xhr.overrideMimeType('text/plain; charset=x-user-defined');\n    }\n  }\n  if (responseType) {\n    xhr.responseType = responseType;\n  }\n  if (withCredentials) {\n    xhr.withCredentials = 'true';\n  }\n  if (onerror && 'onerror' in xhr) {\n    xhr.onerror = onerror;\n  }\n  if (onprogress && xhr.upload && 'onprogress' in xhr.upload) {\n    if (data) {\n      xhr.upload.onprogress = function (evt) {\n        onprogress.call(xhr, evt, evt.loaded / evt.total);\n      };\n    } else {\n      xhr.addEventListener('progress', function (evt) {\n        let totalBytes = 0;\n        if (evt.lengthComputable) {\n          totalBytes = evt.total;\n        } else if (xhr.totalBytes) {\n          totalBytes = xhr.totalBytes;\n        } else {\n          const rawBytes = parseInt(\n            xhr.getResponseHeader('Content-Length-Raw')\n          );\n          if (isFinite(rawBytes)) {\n            xhr.totalBytes = totalBytes = rawBytes;\n          } else {\n            return;\n          }\n        }\n        onprogress.call(xhr, evt, evt.loaded / totalBytes);\n      });\n    }\n  }\n  // /\n  xhr.onreadystatechange = function (evt) {\n    if (xhr.readyState === 4) {\n      // The request is complete\n      if (\n        xhr.status === 200 || // Response OK\n        xhr.status === 304 || // Not Modified\n        xhr.status === 308 // Permanent Redirect\n      ) {\n        if (onsuccess) {\n          let res;\n          if (format === 'xml') {\n            res = evt.target.responseXML;\n          } else if (format === 'text') {\n            res = evt.target.responseText;\n          } else if (format === 'json') {\n            try {\n              res = JSON.parse(evt.target.response);\n            } catch (err) {\n              onerror && onerror.call(xhr, evt);\n            }\n          }\n          onsuccess.call(xhr, evt, res);\n        }\n      } else {\n        onerror && onerror.call(xhr, evt);\n      }\n    }\n  };\n  xhr.send(data);\n  return xhr;\n}\n","/*\n * ----------------------------------------------------------\n * GeneralMIDI\n * ----------------------------------------------------------\n */\n\nimport root from './root';\n\nroot.GM = (function (map) {\n  const clean = function (name) {\n    return name\n      .replace(/[^a-z0-9 ]/gi, '')\n      .replace(/[ ]/g, '_')\n      .toLowerCase();\n  };\n  const res = {\n    byName: {},\n    byId: {},\n    byCategory: {},\n  };\n  for (const key in map) {\n    const list = map[key];\n    for (let n = 0, { length } = list; n < length; n++) {\n      let instrument = list[n];\n      if (!instrument) continue;\n      let num = parseInt(instrument.substr(0, instrument.indexOf(' ')), 10);\n      instrument = instrument.replace(`${num} `, '');\n      res.byId[--num] = res.byName[clean(instrument)] = res.byCategory[\n        clean(key)\n      ] = {\n        id: clean(instrument),\n        instrument,\n        number: num,\n        category: key,\n      };\n    }\n  }\n  return res;\n})({\n  Piano: [\n    '1 Acoustic Grand Piano',\n    '2 Bright Acoustic Piano',\n    '3 Electric Grand Piano',\n    '4 Honky-tonk Piano',\n    '5 Electric Piano 1',\n    '6 Electric Piano 2',\n    '7 Harpsichord',\n    '8 Clavinet',\n  ],\n  'Chromatic Percussion': [\n    '9 Celesta',\n    '10 Glockenspiel',\n    '11 Music Box',\n    '12 Vibraphone',\n    '13 Marimba',\n    '14 Xylophone',\n    '15 Tubular Bells',\n    '16 Dulcimer',\n  ],\n  Organ: [\n    '17 Drawbar Organ',\n    '18 Percussive Organ',\n    '19 Rock Organ',\n    '20 Church Organ',\n    '21 Reed Organ',\n    '22 Accordion',\n    '23 Harmonica',\n    '24 Tango Accordion',\n  ],\n  Guitar: [\n    '25 Acoustic Guitar (nylon)',\n    '26 Acoustic Guitar (steel)',\n    '27 Electric Guitar (jazz)',\n    '28 Electric Guitar (clean)',\n    '29 Electric Guitar (muted)',\n    '30 Overdriven Guitar',\n    '31 Distortion Guitar',\n    '32 Guitar Harmonics',\n  ],\n  Bass: [\n    '33 Acoustic Bass',\n    '34 Electric Bass (finger)',\n    '35 Electric Bass (pick)',\n    '36 Fretless Bass',\n    '37 Slap Bass 1',\n    '38 Slap Bass 2',\n    '39 Synth Bass 1',\n    '40 Synth Bass 2',\n  ],\n  Strings: [\n    '41 Violin',\n    '42 Viola',\n    '43 Cello',\n    '44 Contrabass',\n    '45 Tremolo Strings',\n    '46 Pizzicato Strings',\n    '47 Orchestral Harp',\n    '48 Timpani',\n  ],\n  Ensemble: [\n    '49 String Ensemble 1',\n    '50 String Ensemble 2',\n    '51 Synth Strings 1',\n    '52 Synth Strings 2',\n    '53 Choir Aahs',\n    '54 Voice Oohs',\n    '55 Synth Choir',\n    '56 Orchestra Hit',\n  ],\n  Brass: [\n    '57 Trumpet',\n    '58 Trombone',\n    '59 Tuba',\n    '60 Muted Trumpet',\n    '61 French Horn',\n    '62 Brass Section',\n    '63 Synth Brass 1',\n    '64 Synth Brass 2',\n  ],\n  Reed: [\n    '65 Soprano Sax',\n    '66 Alto Sax',\n    '67 Tenor Sax',\n    '68 Baritone Sax',\n    '69 Oboe',\n    '70 English Horn',\n    '71 Bassoon',\n    '72 Clarinet',\n  ],\n  Pipe: [\n    '73 Piccolo',\n    '74 Flute',\n    '75 Recorder',\n    '76 Pan Flute',\n    '77 Blown Bottle',\n    '78 Shakuhachi',\n    '79 Whistle',\n    '80 Ocarina',\n  ],\n  'Synth Lead': [\n    '81 Lead 1 (square)',\n    '82 Lead 2 (sawtooth)',\n    '83 Lead 3 (calliope)',\n    '84 Lead 4 (chiff)',\n    '85 Lead 5 (charang)',\n    '86 Lead 6 (voice)',\n    '87 Lead 7 (fifths)',\n    '88 Lead 8 (bass + lead)',\n  ],\n  'Synth Pad': [\n    '89 Pad 1 (new age)',\n    '90 Pad 2 (warm)',\n    '91 Pad 3 (polysynth)',\n    '92 Pad 4 (choir)',\n    '93 Pad 5 (bowed)',\n    '94 Pad 6 (metallic)',\n    '95 Pad 7 (halo)',\n    '96 Pad 8 (sweep)',\n  ],\n  'Synth Effects': [\n    '97 FX 1 (rain)',\n    '98 FX 2 (soundtrack)',\n    '99 FX 3 (crystal)',\n    '100 FX 4 (atmosphere)',\n    '101 FX 5 (brightness)',\n    '102 FX 6 (goblins)',\n    '103 FX 7 (echoes)',\n    '104 FX 8 (sci-fi)',\n  ],\n  Ethnic: [\n    '105 Sitar',\n    '106 Banjo',\n    '107 Shamisen',\n    '108 Koto',\n    '109 Kalimba',\n    '110 Bagpipe',\n    '111 Fiddle',\n    '112 Shanai',\n  ],\n  Percussive: [\n    '113 Tinkle Bell',\n    '114 Agogo',\n    '115 Steel Drums',\n    '116 Woodblock',\n    '117 Taiko Drum',\n    '118 Melodic Tom',\n    '119 Synth Drum',\n  ],\n  'Sound effects': [\n    '120 Reverse Cymbal',\n    '121 Guitar Fret Noise',\n    '122 Breath Noise',\n    '123 Seashore',\n    '124 Bird Tweet',\n    '125 Telephone Ring',\n    '126 Helicopter',\n    '127 Applause',\n    '128 Gunshot',\n  ],\n});\n\n/*\n * get/setInstrument\n * ---------------------------------------------------\n */\nroot.getInstrument = function (channelId) {\n  const channel = root.channels[channelId];\n  return channel && channel.instrument;\n};\n\nroot.setInstrument = function (channelId, program, delay) {\n  const channel = root.channels[channelId];\n  if (delay) {\n    return setTimeout(function () {\n      channel.instrument = program;\n    }, delay);\n  }\n  channel.instrument = program;\n};\n\n/*\n * get/setMono\n * ---------------------------------------------------\n */\nroot.getMono = function (channelId) {\n  const channel = root.channels[channelId];\n  return channel && channel.mono;\n};\n\nroot.setMono = function (channelId, truthy, delay) {\n  const channel = root.channels[channelId];\n  if (delay) {\n    return setTimeout(function () {\n      channel.mono = truthy;\n    }, delay);\n  }\n  channel.mono = truthy;\n};\n\n/*\n * get/setOmni\n * ---------------------------------------------------\n */\nroot.getOmni = function (channelId) {\n  const channel = root.channels[channelId];\n  return channel && channel.omni;\n};\n\nroot.setOmni = function (channelId, truthy, delay) {\n  const channel = root.channels[channelId];\n  if (delay) {\n    return setTimeout(function () {\n      channel.omni = truthy;\n    }, delay);\n  }\n  channel.omni = truthy;\n};\n\n/*\n * get/setSolo\n * ---------------------------------------------------\n */\nroot.getSolo = function (channelId) {\n  const channel = root.channels[channelId];\n  return channel && channel.solo;\n};\n\nroot.setSolo = function (channelId, truthy, delay) {\n  const channel = root.channels[channelId];\n  if (delay) {\n    return setTimeout(function () {\n      channel.solo = truthy;\n    }, delay);\n  }\n  channel.solo = truthy;\n};\n\n/*\n * channels\n * ---------------------------------------------------\n */\nroot.channels = (function () {\n  // 0 - 15 channels\n  const channels = {};\n  for (let i = 0; i < 16; i++) {\n    channels[i] = {\n      // default values\n      instrument: i,\n      pitchBend: 0,\n      mute: false,\n      mono: false,\n      omni: false,\n      solo: false,\n    };\n  }\n  return channels;\n})();\n\n/*\n * note conversions\n * ---------------------------------------------------\n */\nroot.keyToNote = {}; // C8  == 108\nroot.noteToKey = {}; // 108 ==  C8\n\n~(function () {\n  const A0 = 0x15; // first note\n  const C8 = 0x6c; // last note\n  const number2key = [\n    'C',\n    'Db',\n    'D',\n    'Eb',\n    'E',\n    'F',\n    'Gb',\n    'G',\n    'Ab',\n    'A',\n    'Bb',\n    'B',\n  ];\n  for (let n = A0; n <= C8; n++) {\n    const octave = ((n - 12) / 12) >> 0;\n    const name = number2key[n % 12] + octave;\n    root.keyToNote[name] = n;\n    root.noteToKey[n] = name;\n  }\n})();\n","/* Wrapper for accessing strings through sequential reads */\nexport default function (str) {\n  let position = 0;\n\n  function read(length) {\n    const result = str.substr(position, length);\n    position += length;\n    return result;\n  }\n\n  /* read a big-endian 32-bit integer */\n  function readInt32() {\n    const result =\n      (str.charCodeAt(position) << 24) +\n      (str.charCodeAt(position + 1) << 16) +\n      (str.charCodeAt(position + 2) << 8) +\n      str.charCodeAt(position + 3);\n    position += 4;\n    return result;\n  }\n\n  /* read a big-endian 16-bit integer */\n  function readInt16() {\n    const result =\n      (str.charCodeAt(position) << 8) + str.charCodeAt(position + 1);\n    position += 2;\n    return result;\n  }\n\n  /* read an 8-bit integer */\n  function readInt8(signed) {\n    let result = str.charCodeAt(position);\n    if (signed && result > 127) result -= 256;\n    position += 1;\n    return result;\n  }\n\n  function eof() {\n    return position >= str.length;\n  }\n\n  /*\n   * read a MIDI-style variable-length integer\n   * (big-endian value in groups of 7 bits,\n   * with top bit set to signify that another byte follows)\n   */\n  function readVarInt() {\n    let result = 0;\n    while (true) {\n      const b = readInt8();\n      if (b & 0x80) {\n        result += b & 0x7f;\n        result <<= 7;\n      } else {\n        /* b is the last byte */\n        return result + b;\n      }\n    }\n  }\n\n  return {\n    eof,\n    read,\n    readInt32,\n    readInt16,\n    readInt8,\n    readVarInt,\n  };\n}\n","const clone = function (o) {\n  if (typeof o !== 'object') return o;\n  if (o === null) return o;\n  const ret = typeof o.length === 'number' ? [] : {};\n  for (const key in o) ret[key] = clone(o[key]);\n  return ret;\n};\n\nexport function Replayer(midiFile, timeWarp, eventProcessor, bpm) {\n  const trackStates = [];\n  let beatsPerMinute = bpm || 120;\n  const bpmOverride = !!bpm;\n  const { ticksPerBeat } = midiFile.header;\n\n  for (let i = 0; i < midiFile.tracks.length; i++) {\n    trackStates[i] = {\n      nextEventIndex: 0,\n      ticksToNextEvent: midiFile.tracks[i].length\n        ? midiFile.tracks[i][0].deltaTime\n        : null,\n    };\n  }\n\n  function getNextEvent() {\n    let ticksToNextEvent = null;\n    let nextEventTrack = null;\n    let nextEventIndex = null;\n\n    for (let i = 0; i < trackStates.length; i++) {\n      if (\n        trackStates[i].ticksToNextEvent != null &&\n        (ticksToNextEvent == null ||\n          trackStates[i].ticksToNextEvent < ticksToNextEvent)\n      ) {\n        ticksToNextEvent = trackStates[i].ticksToNextEvent;\n        nextEventTrack = i;\n        nextEventIndex = trackStates[i].nextEventIndex;\n      }\n    }\n    if (nextEventTrack != null) {\n      /* consume event from that track */\n      const nextEvent = midiFile.tracks[nextEventTrack][nextEventIndex];\n      if (midiFile.tracks[nextEventTrack][nextEventIndex + 1]) {\n        trackStates[nextEventTrack].ticksToNextEvent +=\n          midiFile.tracks[nextEventTrack][nextEventIndex + 1].deltaTime;\n      } else {\n        trackStates[nextEventTrack].ticksToNextEvent = null;\n      }\n      trackStates[nextEventTrack].nextEventIndex += 1;\n      /* advance timings on all tracks by ticksToNextEvent */\n      for (let i = 0; i < trackStates.length; i++) {\n        if (trackStates[i].ticksToNextEvent != null) {\n          trackStates[i].ticksToNextEvent -= ticksToNextEvent;\n        }\n      }\n      return {\n        ticksToEvent: ticksToNextEvent,\n        event: nextEvent,\n        track: nextEventTrack,\n      };\n    }\n    return null;\n  }\n  //\n  let midiEvent;\n  const temporal = [];\n  ~(function processEvents() {\n    function processNext() {\n      if (\n        !bpmOverride &&\n        midiEvent.event.type === 'meta' &&\n        midiEvent.event.subtype === 'setTempo'\n      ) {\n        // tempo change events can occur anywhere in the middle and affect events that follow\n        beatsPerMinute = 60000000 / midiEvent.event.microsecondsPerBeat;\n      }\n      // /\n      let beatsToGenerate = 0;\n      let secondsToGenerate = 0;\n      if (midiEvent.ticksToEvent > 0) {\n        beatsToGenerate = midiEvent.ticksToEvent / ticksPerBeat;\n        secondsToGenerate = beatsToGenerate / (beatsPerMinute / 60);\n      }\n      // /\n      const time = secondsToGenerate * 1000 * timeWarp || 0;\n      temporal.push([midiEvent, time]);\n      midiEvent = getNextEvent();\n    }\n    // /\n    midiEvent = getNextEvent();\n    if (midiEvent) {\n      while (midiEvent) processNext(true);\n    }\n  })();\n\n  return {\n    getData() {\n      return clone(temporal);\n    },\n  };\n}\n","/*\n * ----------------------------------------------------------\n * Web Audio API - OGG or MPEG Soundbank\n * ----------------------------------------------------------\n * http://webaudio.github.io/web-audio-api/\n * ----------------------------------------------------------\n */\nimport root from '../root';\n\n// REF: http://stackoverflow.com/questions/21797299/convert-base64-string-to-arraybuffer\nfunction base64ToArrayBuffer(base64) {\n  const binaryString = window.atob(base64);\n  const len = binaryString.length;\n  const bytes = new Uint8Array(len);\n  for (let i = 0; i < len; i++) {\n    bytes[i] = binaryString.charCodeAt(i);\n  }\n  return bytes.buffer;\n}\n\nwindow.AudioContext &&\n  (function () {\n    // var audioContext = null // new AudioContext()\n    const useStreamingBuffer = false; // !!audioContext.createMediaElementSource\n    const midi = (root.WebAudio = { api: 'webaudio' });\n    let ctx; // audio context\n    const sources = {};\n    const effects = {};\n    let masterVolume = 127;\n    const audioBuffers = {};\n    // /\n    midi.audioBuffers = audioBuffers;\n    midi.send = function (data, delay) {};\n    midi.setController = function (channelId, type, value, delay) {};\n\n    midi.setVolume = function (channelId, volume, delay) {\n      if (delay) {\n        setTimeout(function () {\n          masterVolume = volume;\n        }, delay * 1000);\n      } else {\n        masterVolume = volume;\n      }\n    };\n\n    midi.programChange = function (channelId, program, delay) {\n      /*\n       *      if (delay) {\n       *        return setTimeout(function() {\n       *          var channel = root.channels[channelId]\n       *          channel.instrument = program\n       *        }, delay)\n       *      } else {\n       */\n      const channel = root.channels[channelId];\n      channel.instrument = program;\n      //      }\n    };\n\n    midi.pitchBend = function (channelId, program, delay) {\n      /*\n       *      if (delay) {\n       *        setTimeout(function() {\n       *          var channel = root.channels[channelId]\n       *          channel.pitchBend = program\n       *        }, delay)\n       *      } else {\n       */\n      const channel = root.channels[channelId];\n      channel.pitchBend = program;\n      //      }\n    };\n\n    midi.noteOn = function (channelId, noteId, velocity, delay) {\n      delay = delay || 0;\n\n      // / check whether the note exists\n      const channel = root.channels[channelId];\n      const { instrument } = channel;\n      const bufferId = `${instrument}${noteId}`;\n      const buffer = audioBuffers[bufferId];\n      if (!buffer) {\n        //        console.log(midi.GM.byId[instrument].id, instrument, channelId)\n        return;\n      }\n\n      // / convert relative delay to absolute delay\n      if (delay < ctx.currentTime) {\n        delay += ctx.currentTime;\n      }\n\n      // / create audio buffer\n      let source;\n      if (useStreamingBuffer) {\n        source = ctx.createMediaElementSource(buffer);\n      } else {\n        // XMLHTTP buffer\n        source = ctx.createBufferSource();\n        source.buffer = buffer;\n      }\n\n      // / add effects to buffer\n      if (effects) {\n        let chain = source;\n        for (const key in effects) {\n          chain.connect(effects[key].input);\n          chain = effects[key];\n        }\n      }\n\n      // / add gain + pitchShift\n      const gain = (velocity / 127) * (masterVolume / 127) * 2 - 1;\n      source.connect(ctx.destination);\n      source.playbackRate.value = 1; // pitch shift\n      source.gainNode = ctx.createGain(); // gain\n      source.gainNode.connect(ctx.destination);\n      source.gainNode.gain.value = Math.min(1.0, Math.max(-1.0, gain));\n      source.connect(source.gainNode);\n      // /\n      if (useStreamingBuffer) {\n        if (delay) {\n          return setTimeout(function () {\n            buffer.currentTime = 0;\n            buffer.play();\n          }, delay * 1000);\n        }\n        buffer.currentTime = 0;\n        buffer.play();\n      } else {\n        source.start(delay || 0);\n      }\n      // /\n      sources[`${channelId}${noteId}`] = source;\n      // /\n      return source;\n    };\n\n    midi.noteOff = function (channelId, noteId, delay) {\n      delay = delay || 0;\n\n      // / check whether the note exists\n      const channel = root.channels[channelId];\n      const { instrument } = channel;\n      const bufferId = `${instrument}${noteId}`;\n      const buffer = audioBuffers[bufferId];\n      if (buffer) {\n        if (delay < ctx.currentTime) {\n          delay += ctx.currentTime;\n        }\n        // /\n        const source = sources[`${channelId}${noteId}`];\n        if (source) {\n          if (source.gainNode) {\n            /*\n             * @Miranet: 'the values of 0.2 and 0.3 could of course be used as\n             * a 'release' parameter for ADSR like time settings.'\n             * add { 'metadata': { release: 0.3 } } to soundfont files\n             */\n            const { gain } = source.gainNode;\n            gain.linearRampToValueAtTime(gain.value, delay);\n            gain.linearRampToValueAtTime(-1.0, delay + 0.3);\n          }\n          // /\n          if (useStreamingBuffer) {\n            if (delay) {\n              setTimeout(function () {\n                buffer.pause();\n              }, delay * 1000);\n            } else {\n              buffer.pause();\n            }\n          } else if (source.noteOff) {\n            source.noteOff(delay + 0.5);\n          } else {\n            source.stop(delay + 0.5);\n          }\n          // /\n          delete sources[`${channelId}${noteId}`];\n          // /\n          return source;\n        }\n      }\n    };\n\n    midi.chordOn = function (channel, chord, velocity, delay) {\n      const res = {};\n      for (var n = 0, note, len = chord.length; n < len; n++) {\n        res[(note = chord[n])] = midi.noteOn(channel, note, velocity, delay);\n      }\n      return res;\n    };\n\n    midi.chordOff = function (channel, chord, delay) {\n      const res = {};\n      for (var n = 0, note, len = chord.length; n < len; n++) {\n        res[(note = chord[n])] = midi.noteOff(channel, note, delay);\n      }\n      return res;\n    };\n\n    midi.stopAllNotes = function () {\n      for (const sid in sources) {\n        let delay = 0;\n        if (delay < ctx.currentTime) {\n          delay += ctx.currentTime;\n        }\n        const source = sources[sid];\n        source.gain.linearRampToValueAtTime(1, delay);\n        source.gain.linearRampToValueAtTime(0, delay + 0.3);\n        if (source.noteOff) {\n          // old api\n          source.noteOff(delay + 0.3);\n        } else {\n          // new api\n          source.stop(delay + 0.3);\n        }\n        delete sources[sid];\n      }\n    };\n\n    midi.setEffects = function (list) {\n      if (ctx.tunajs) {\n        for (let n = 0; n < list.length; n++) {\n          const data = list[n];\n          const effect = new ctx.tunajs[data.type](data);\n          effect.connect(ctx.destination);\n          effects[data.type] = effect;\n        }\n      } else {\n        return console.log('Effects module not installed.');\n      }\n    };\n\n    midi.connect = function (opts) {\n      root.setDefaultPlugin(midi);\n      midi.setContext(ctx || createAudioContext(), opts.onsuccess);\n    };\n\n    midi.getContext = function () {\n      return ctx;\n    };\n\n    midi.setContext = function (newCtx, onload, onprogress, onerror) {\n      ctx = newCtx;\n\n      // / tuna.js effects module - https://github.com/Dinahmoe/tuna\n      if (typeof window.Tuna !== 'undefined' && !ctx.tunajs) {\n        ctx.tunajs = new window.Tuna(ctx);\n      }\n\n      // / loading audio files\n      const urls = [];\n      const notes = root.keyToNote;\n      for (const key in notes) urls.push(key);\n      // /\n      const waitForEnd = function (instrument) {\n        for (const key in bufferPending) {\n          // has pending items\n          if (bufferPending[key]) return;\n        }\n        // /\n        if (onload) {\n          // run onload once\n          onload();\n          onload = null;\n        }\n      };\n      // /\n      const requestAudio = function (soundfont, instrumentId, index, key) {\n        const url = soundfont[key];\n        if (url) {\n          bufferPending[instrumentId]++;\n          loadAudio(\n            url,\n            function (buffer) {\n              buffer.id = key;\n              const noteId = root.keyToNote[key];\n              audioBuffers[`${instrumentId}${noteId}`] = buffer;\n              // /\n              if (--bufferPending[instrumentId] === 0) {\n                /*\n                 * var percent = index / 87\n                 *              console.log(midi.GM.byId[instrumentId], 'processing: ', percent)\n                 */\n                soundfont.isLoaded = true;\n                waitForEnd(instrument);\n              }\n            },\n            function (err) {\n              console.error(err);\n            }\n          );\n        }\n      };\n      // /\n      var bufferPending = {};\n      for (var instrument in root.Soundfont) {\n        const soundfont = root.Soundfont[instrument];\n        if (soundfont.isLoaded) {\n          continue;\n        }\n        // /\n        const synth = root.GM.byName[instrument];\n        const instrumentId = synth.number;\n        // /\n        bufferPending[instrumentId] = 0;\n        // /\n        for (let index = 0; index < urls.length; index++) {\n          const key = urls[index];\n          requestAudio(soundfont, instrumentId, index, key);\n        }\n      }\n      // /\n      setTimeout(waitForEnd, 1);\n    };\n\n    /*\n     * Load audio file: streaming | base64 | arraybuffer\n     * ----------------------------------------------------------------------\n     */\n    function loadAudio(url, onload, onerror) {\n      if (useStreamingBuffer) {\n        const audio = new window.Audio();\n        audio.src = url;\n        audio.controls = false;\n        audio.autoplay = false;\n        audio.preload = false;\n        audio.addEventListener('canplay', function () {\n          onload && onload(audio);\n        });\n        audio.addEventListener('error', function (err) {\n          onerror && onerror(err);\n        });\n        document.body.appendChild(audio);\n      } else if (url.indexOf('data:audio') === 0) {\n        // Base64 string\n        const base64 = url.split(',')[1];\n        const buffer = base64ToArrayBuffer(base64);\n        ctx.decodeAudioData(buffer, onload, onerror);\n      } else {\n        // XMLHTTP buffer\n        const request = new window.XMLHttpRequest();\n        request.open('GET', url, true);\n        request.responseType = 'arraybuffer';\n        request.onload = function () {\n          ctx.decodeAudioData(request.response, onload, onerror);\n        };\n        request.send();\n      }\n    }\n\n    function createAudioContext() {\n      return new (window.AudioContext || window.webkitAudioContext)();\n    }\n  })();\n","/*\n *----------------------------------------------------------\n *midi.Player : 0.3.1 : 2015-03-26\n *----------------------------------------------------------\n *https://github.com/mudcube/midi.js\n *----------------------------------------------------------\n */\n\nimport { MidiFile, Replayer } from './jasmid';\nimport root from './root';\n\n(function () {\n  root.Player = {};\n  const player = root.Player;\n  player.currentTime = 0;\n  player.endTime = 0;\n  player.restart = 0;\n  player.playing = false;\n  player.timeWarp = 1;\n  player.startDelay = 0;\n  player.BPM = 120;\n  player.listeners = [];\n\n  player.start = player.resume = function (onsuccess) {\n    if (player.currentTime < -1) {\n      player.currentTime = -1;\n    }\n    startAudio(player.currentTime, null, onsuccess);\n  };\n\n  player.pause = function () {\n    const tmp = player.restart;\n    stopAudio();\n    player.restart = tmp;\n  };\n\n  player.stop = function () {\n    stopAudio();\n    player.restart = 0;\n    player.currentTime = 0;\n  };\n\n  player.addListener = function (listener) {\n    player.listeners.push(listener);\n    return listener;\n  };\n\n  player.removeListener = function (listener) {\n    if (listener) {\n      const index = player.listeners.indexOf(listener);\n      if (index > -1) {\n        listener.splice(index, 1);\n        return true;\n      }\n    } else if (player.listeners.length > 0) {\n      player.listeners = [];\n      return true;\n    }\n    return false;\n  };\n\n  player.clearAnimation = function () {\n    if (player.animationFrameId) {\n      window.cancelAnimationFrame(player.animationFrameId);\n    }\n  };\n\n  player.setAnimation = function (callback) {\n    let currentTime = 0;\n    let tOurTime = 0;\n    let tTheirTime = 0;\n    player.clearAnimation();\n    const frame = function () {\n      player.animationFrameId = window.requestAnimationFrame(frame);\n      if (player.endTime === 0) {\n        return;\n      }\n      if (player.playing) {\n        currentTime =\n          tTheirTime === player.currentTime ? tOurTime - Date.now() : 0;\n        if (player.currentTime === 0) {\n          currentTime = 0;\n        } else {\n          currentTime = player.currentTime - currentTime;\n        }\n        if (tTheirTime !== player.currentTime) {\n          tOurTime = Date.now();\n          tTheirTime = player.currentTime;\n        }\n      } else {\n        currentTime = player.currentTime;\n      }\n      const { endTime } = player;\n      const total = currentTime / 1000;\n      const minutes = total / 60;\n      const seconds = total - minutes * 60;\n      const t1 = minutes * 60 + seconds;\n      const t2 = endTime / 1000;\n      // /\n      if (t2 - t1 < -1.0) {\n      } else {\n        callback({\n          now: t1,\n          end: t2,\n          events: noteRegistrar,\n        });\n      }\n    };\n    // /\n    window.requestAnimationFrame(frame);\n  };\n\n  // helpers\n\n  player.loadMidiFile = function (onsuccess, onprogress, onerror) {\n    try {\n      // console.log(MidiFile(player.currentData), new Replayer(MidiFile(player.currentData), player.timeWarp, null, player.BPM))\n      player.replayer = new Replayer(\n        MidiFile(player.currentData),\n        player.timeWarp,\n        null,\n        player.BPM\n      );\n      player.data = player.replayer.getData();\n      player.endTime = getLength();\n      // /\n      root.loadPlugin({\n        // instruments: player.getFileInstruments(),\n        onsuccess,\n        onprogress,\n        onerror,\n      });\n    } catch (event) {\n      console.error(event);\n      onerror && onerror(event);\n    }\n  };\n\n  player.loadFile = function (file, onsuccess, onprogress, onerror) {\n    player.stop();\n    if (file.indexOf('base64,') !== -1) {\n      const data = window.atob(file.split(',')[1]);\n      player.currentData = data;\n      player.loadMidiFile(onsuccess, onprogress, onerror);\n    } else {\n      const fetch = new window.XMLHttpRequest();\n      fetch.open('GET', file);\n      fetch.overrideMimeType('text/plain; charset=x-user-defined');\n      fetch.onreadystatechange = function () {\n        if (this.readyState === 4) {\n          if (this.status === 200) {\n            const t = this.responseText || '';\n            const ff = [];\n            const mx = t.length;\n            const scc = String.fromCharCode;\n            for (let z = 0; z < mx; z++) {\n              ff[z] = scc(t.charCodeAt(z) & 255);\n            }\n            // /\n            const data = ff.join('');\n            player.currentData = data;\n            player.loadMidiFile(onsuccess, onprogress, onerror);\n          } else {\n            onerror && onerror('Unable to load MIDI file');\n          }\n        }\n      };\n      fetch.send();\n    }\n  };\n\n  player.getFileInstruments = function () {\n    const instruments = {};\n    const programs = {};\n    for (let n = 0; n < player.data.length; n++) {\n      const { event } = player.data[n][0];\n      if (event.type !== 'channel') {\n        continue;\n      }\n      const { channel } = event;\n      switch (event.subtype) {\n        case 'controller':\n          //        console.log(event.channel, root.defineControl[event.controllerType], event.value)\n          break;\n        case 'programChange':\n          programs[channel] = event.programNumber;\n          break;\n        case 'noteOn':\n          var program = programs[channel];\n          var gm = root.GM.byId[isFinite(program) ? program : channel];\n          instruments[gm.id] = true;\n          break;\n      }\n    }\n    const ret = [];\n    for (const key in instruments) {\n      ret.push(key);\n    }\n    return ret;\n  };\n\n  // Playing the audio\n\n  const eventQueue = []; // hold events to be triggered\n  let queuedTime; //\n  let startTime = 0; // to measure time elapse\n  var noteRegistrar = {}; // get event for requested note\n  const scheduleTracking = function (\n    channel,\n    note,\n    currentTime,\n    offset,\n    message,\n    velocity,\n    time\n  ) {\n    return setTimeout(function () {\n      const data = {\n        channel,\n        note,\n        now: currentTime,\n        end: player.endTime,\n        message,\n        velocity,\n      };\n      //\n      if (message === 128) {\n        delete noteRegistrar[note];\n      } else {\n        noteRegistrar[note] = data;\n      }\n      player.listeners.forEach((listener) => {\n        listener(data);\n      });\n      player.currentTime = currentTime;\n      // /\n      eventQueue.shift();\n      // /\n      if (eventQueue.length < 1000) {\n        startAudio(queuedTime, true);\n      } else if (\n        player.currentTime === queuedTime &&\n        queuedTime < player.endTime\n      ) {\n        // grab next sequence\n        startAudio(queuedTime, true);\n      }\n    }, currentTime - offset);\n  };\n\n  const getContext = function () {\n    if (root.api === 'webaudio') {\n      return root.WebAudio.getContext();\n    }\n    player.ctx = { currentTime: 0 };\n\n    return player.ctx;\n  };\n\n  var getLength = function () {\n    const { data } = player;\n    const { length } = data;\n    let totalTime = 0.5;\n    for (let n = 0; n < length; n++) {\n      totalTime += data[n][1];\n    }\n    return totalTime;\n  };\n\n  let __now;\n  const getNow = function () {\n    if (window.performance && window.performance.now) {\n      return window.performance.now();\n    }\n    return Date.now();\n  };\n\n  var startAudio = function (currentTime, fromCache, onsuccess) {\n    if (!player.replayer) {\n      return;\n    }\n    if (!fromCache) {\n      if (typeof currentTime === 'undefined') {\n        currentTime = player.restart;\n      }\n      // /\n      player.playing && stopAudio();\n      player.playing = true;\n      player.data = player.replayer.getData();\n      player.endTime = getLength();\n    }\n    // /\n    let note;\n    let offset = 0;\n    let messages = 0;\n    const { data } = player;\n    const ctx = getContext();\n    const { length } = data;\n    //\n    queuedTime = 0.5;\n    // /\n    // var interval = eventQueue[0] && eventQueue[0].interval || 0\n    const foffset = currentTime - player.currentTime;\n    // /\n    if (root.api !== 'webaudio') {\n      // set currentTime on ctx\n      const now = getNow();\n      __now = __now || now;\n      ctx.currentTime = (now - __now) / 1000;\n    }\n    // /\n    startTime = ctx.currentTime;\n    // /\n    for (let n = 0; n < length && messages < 100; n++) {\n      const obj = data[n];\n      if ((queuedTime += obj[1]) <= currentTime) {\n        offset = queuedTime;\n        continue;\n      }\n      // /\n      currentTime = queuedTime - offset;\n      // /\n      const { event } = obj[0];\n      if (event.type !== 'channel') {\n        continue;\n      }\n      // /\n      const channelId = event.channel;\n      const channel = root.channels[channelId];\n      const delay =\n        ctx.currentTime + (currentTime + foffset + player.startDelay) / 1000;\n      const queueTime = queuedTime - offset + player.startDelay;\n      switch (event.subtype) {\n        case 'controller':\n          eventQueue.push({\n            event,\n            time: queueTime,\n            source: root.setController(\n              channelId,\n              event.controllerType,\n              event.value,\n              delay\n            ),\n            interval: scheduleTracking(\n              channelId,\n              event.controllerType,\n              queuedTime + player.startDelay,\n              offset - foffset,\n              176,\n              event.value\n            ),\n          });\n          break;\n        case 'programChange':\n          root.programChange(channelId, event.programNumber, delay);\n          break;\n        case 'pitchBend':\n          root.pitchBend(channelId, event.value, delay);\n          break;\n        case 'noteOn':\n          if (channel.mute) break;\n          note = event.noteNumber - (player.MIDIOffset || 0);\n          eventQueue.push({\n            event,\n            time: queueTime,\n            source: root.noteOn(\n              channelId,\n              event.noteNumber,\n              event.velocity,\n              delay\n            ),\n            interval: scheduleTracking(\n              channelId,\n              note,\n              queuedTime + player.startDelay,\n              offset - foffset,\n              144,\n              event.velocity\n            ),\n          });\n          messages++;\n          break;\n        case 'noteOff':\n          if (channel.mute) break;\n          note = event.noteNumber - (player.MIDIOffset || 0);\n          eventQueue.push({\n            event,\n            time: queueTime,\n            source: root.noteOff(channelId, event.noteNumber, delay),\n            interval: scheduleTracking(\n              channelId,\n              note,\n              queuedTime,\n              offset - foffset,\n              128,\n              0\n            ),\n          });\n          break;\n        default:\n          break;\n      }\n    }\n    // /\n    onsuccess && onsuccess(eventQueue);\n  };\n\n  var stopAudio = function () {\n    const ctx = getContext();\n    player.playing = false;\n    player.restart += (ctx.currentTime - startTime) * 1000;\n    // stop the audio, and intervals\n    while (eventQueue.length) {\n      const o = eventQueue.pop();\n      window.clearInterval(o.interval);\n      if (!o.source) continue; // is not webaudio\n      if (typeof o.source === 'number') {\n        window.clearTimeout(o.source);\n      } else {\n        // webaudio\n        o.source.disconnect(0);\n      }\n    }\n    // run callback to cancel any notes still playing\n    for (const key in noteRegistrar) {\n      const o = noteRegistrar[key];\n      if (noteRegistrar[key].message === 144) {\n        player.listeners.forEach((listener) => {\n          listener({\n            channel: o.channel,\n            note: o.note,\n            now: o.now,\n            end: o.end,\n            message: 128,\n            velocity: o.velocity,\n          });\n        });\n      }\n    }\n    // reset noteRegistrar\n    noteRegistrar = {};\n  };\n})();\n","/**\n * class to parse the .mid file format\n * (depends on _stream.js)\n */\n\nimport Stream from './_stream';\n\nexport function MidiFile(data) {\n  let lastEventTypeByte;\n\n  function readChunk(stream) {\n    const id = stream.read(4);\n    const length = stream.readInt32();\n    return {\n      id,\n      length,\n      data: stream.read(length),\n    };\n  }\n\n  function readEvent(stream) {\n    const event = {};\n    event.deltaTime = stream.readVarInt();\n    let eventTypeByte = stream.readInt8();\n    if ((eventTypeByte & 0xf0) === 0xf0) {\n      /* system / meta event */\n      if (eventTypeByte === 0xff) {\n        /* meta event */\n        event.type = 'meta';\n        const subtypeByte = stream.readInt8();\n        const length = stream.readVarInt();\n        switch (subtypeByte) {\n          case 0x00:\n            event.subtype = 'sequenceNumber';\n            if (length !== 2)\n              throw new Error(\n                `Expected length for sequenceNumber event is 2, got ${length}`\n              );\n            event.number = stream.readInt16();\n            return event;\n          case 0x01:\n            event.subtype = 'text';\n            event.text = stream.read(length);\n            return event;\n          case 0x02:\n            event.subtype = 'copyrightNotice';\n            event.text = stream.read(length);\n            return event;\n          case 0x03:\n            event.subtype = 'trackName';\n            event.text = stream.read(length);\n            return event;\n          case 0x04:\n            event.subtype = 'instrumentName';\n            event.text = stream.read(length);\n            return event;\n          case 0x05:\n            event.subtype = 'lyrics';\n            event.text = stream.read(length);\n            return event;\n          case 0x06:\n            event.subtype = 'marker';\n            event.text = stream.read(length);\n            return event;\n          case 0x07:\n            event.subtype = 'cuePoint';\n            event.text = stream.read(length);\n            return event;\n          case 0x20:\n            event.subtype = 'midiChannelPrefix';\n            if (length !== 1)\n              throw new Error(\n                `Expected length for midiChannelPrefix event is 1, got ${length}`\n              );\n            event.channel = stream.readInt8();\n            return event;\n          case 0x2f:\n            event.subtype = 'endOfTrack';\n            if (length !== 0)\n              throw new Error(\n                `Expected length for endOfTrack event is 0, got ${length}`\n              );\n            return event;\n          case 0x51:\n            event.subtype = 'setTempo';\n            if (length !== 3)\n              throw new Error(\n                `Expected length for setTempo event is 3, got ${length}`\n              );\n            event.microsecondsPerBeat =\n              (stream.readInt8() << 16) +\n              (stream.readInt8() << 8) +\n              stream.readInt8();\n            return event;\n          case 0x54:\n            event.subtype = 'smpteOffset';\n            if (length !== 5)\n              throw new Error(\n                `Expected length for smpteOffset event is 5, got ${length}`\n              );\n            var hourByte = stream.readInt8();\n            event.frameRate = {\n              0x00: 24,\n              0x20: 25,\n              0x40: 29,\n              0x60: 30,\n            }[hourByte & 0x60];\n            event.hour = hourByte & 0x1f;\n            event.min = stream.readInt8();\n            event.sec = stream.readInt8();\n            event.frame = stream.readInt8();\n            event.subframe = stream.readInt8();\n            return event;\n          case 0x58:\n            event.subtype = 'timeSignature';\n            if (length !== 4)\n              throw new Error(\n                `Expected length for timeSignature event is 4, got ${length}`\n              );\n            event.numerator = stream.readInt8();\n            event.denominator = Math.pow(2, stream.readInt8());\n            event.metronome = stream.readInt8();\n            event.thirtyseconds = stream.readInt8();\n            return event;\n          case 0x59:\n            event.subtype = 'keySignature';\n            if (length !== 2)\n              throw new Error(\n                `Expected length for keySignature event is 2, got ${length}`\n              );\n            event.key = stream.readInt8(true);\n            event.scale = stream.readInt8();\n            return event;\n          case 0x7f:\n            event.subtype = 'sequencerSpecific';\n            event.data = stream.read(length);\n            return event;\n          default:\n            // console.log(\"Unrecognised meta event subtype: \" + subtypeByte)\n            event.subtype = 'unknown';\n            event.data = stream.read(length);\n            return event;\n        }\n        /*\n         * event.data = stream.read(length)\n         * return event\n         */\n      } else if (eventTypeByte === 0xf0) {\n        event.type = 'sysEx';\n        const length = stream.readVarInt();\n        event.data = stream.read(length);\n        return event;\n      } else if (eventTypeByte === 0xf7) {\n        event.type = 'dividedSysEx';\n        const length = stream.readVarInt();\n        event.data = stream.read(length);\n        return event;\n      } else {\n        throw new Error(`Unrecognised MIDI event type byte: ${eventTypeByte}`);\n      }\n    } else {\n      /* channel event */\n      let param1;\n      if ((eventTypeByte & 0x80) === 0) {\n        /*\n         * running status - reuse lastEventTypeByte as the event type.\n         * eventTypeByte is actually the first parameter\n         */\n        param1 = eventTypeByte;\n        eventTypeByte = lastEventTypeByte;\n      } else {\n        param1 = stream.readInt8();\n        lastEventTypeByte = eventTypeByte;\n      }\n      const eventType = eventTypeByte >> 4;\n      event.channel = eventTypeByte & 0x0f;\n      event.type = 'channel';\n      switch (eventType) {\n        case 0x08:\n          event.subtype = 'noteOff';\n          event.noteNumber = param1;\n          event.velocity = stream.readInt8();\n          return event;\n        case 0x09:\n          event.noteNumber = param1;\n          event.velocity = stream.readInt8();\n          if (event.velocity === 0) {\n            event.subtype = 'noteOff';\n          } else {\n            event.subtype = 'noteOn';\n          }\n          return event;\n        case 0x0a:\n          event.subtype = 'noteAftertouch';\n          event.noteNumber = param1;\n          event.amount = stream.readInt8();\n          return event;\n        case 0x0b:\n          event.subtype = 'controller';\n          event.controllerType = param1;\n          event.value = stream.readInt8();\n          return event;\n        case 0x0c:\n          event.subtype = 'programChange';\n          event.programNumber = param1;\n          return event;\n        case 0x0d:\n          event.subtype = 'channelAftertouch';\n          event.amount = param1;\n          return event;\n        case 0x0e:\n          event.subtype = 'pitchBend';\n          event.value = param1 + (stream.readInt8() << 7);\n          return event;\n        default:\n          throw new Error(`Unrecognised MIDI event type: ${eventType}`);\n        /*\n         *console.log(\"Unrecognised MIDI event type: \" + eventType)\n         *stream.readInt8()\n         *event.subtype = 'unknown'\n         *return event\n         */\n      }\n    }\n  }\n\n  const stream = Stream(data);\n  const headerChunk = readChunk(stream);\n  if (headerChunk.id !== 'MThd' || headerChunk.length !== 6) {\n    throw new Error('Bad .mid file - header not found');\n  }\n  const headerStream = Stream(headerChunk.data);\n  const formatType = headerStream.readInt16();\n  const trackCount = headerStream.readInt16();\n  const timeDivision = headerStream.readInt16();\n  let ticksPerBeat;\n\n  if (timeDivision & 0x8000) {\n    throw new Error(\n      'Expressing time division in SMTPE frames is not supported yet'\n    );\n  } else {\n    ticksPerBeat = timeDivision;\n  }\n\n  const header = {\n    formatType,\n    trackCount,\n    ticksPerBeat,\n  };\n  const tracks = [];\n  for (let i = 0; i < header.trackCount; i++) {\n    tracks[i] = [];\n    const trackChunk = readChunk(stream);\n    if (trackChunk.id !== 'MTrk') {\n      throw new Error(`Unexpected chunk - expected MTrk, got ${trackChunk.id}`);\n    }\n    const trackStream = Stream(trackChunk.data);\n    while (!trackStream.eof()) {\n      const event = readEvent(trackStream);\n      tracks[i].push(event);\n      // console.log(event)\n    }\n  }\n\n  return {\n    header,\n    tracks,\n  };\n}\n","/*\n * ----------------------------------------------------------------------\n * AudioTag <audio> - OGG or MPEG Soundbank\n * ----------------------------------------------------------------------\n * http://dev.w3.org/html5/spec/Overview.html#the-audio-element\n * ----------------------------------------------------------------------\n */\nimport root from '../root';\n\nwindow.Audio &&\n  (function () {\n    const midi = (root.AudioTag = { api: 'audiotag' });\n    const noteToKey = {};\n    let volume = 127; // floating point\n    let bufferNid = -1; // current channel\n    const audioBuffers = []; // the audio channels\n    const notesOn = []; // instrumentId + noteId that is currently playing in each 'channel', for routing noteOff/chordOff calls\n    const notes = {}; // the piano keys\n    for (let nid = 0; nid < 12; nid++) {\n      audioBuffers[nid] = new window.Audio();\n    }\n\n    const playChannel = function (channel, note) {\n      if (!root.channels[channel]) return;\n      const { instrument } = root.channels[channel];\n      const instrumentId = root.GM.byId[instrument].id;\n      note = notes[note];\n      if (note) {\n        const instrumentNoteId = `${instrumentId}${note.id}`;\n        const nid = (bufferNid + 1) % audioBuffers.length;\n        const audio = audioBuffers[nid];\n        notesOn[nid] = instrumentNoteId;\n        if (!root.Soundfont[instrumentId]) {\n          if (root.DEBUG) {\n            console.log('404', instrumentId);\n          }\n          return;\n        }\n        audio.src = root.Soundfont[instrumentId][note.id];\n        audio.volume = volume / 127;\n        audio.play();\n        bufferNid = nid;\n      }\n    };\n\n    const stopChannel = function (channel, note) {\n      if (!root.channels[channel]) return;\n      const { instrument } = root.channels[channel];\n      const instrumentId = root.GM.byId[instrument].id;\n      note = notes[note];\n      if (note) {\n        const instrumentNoteId = `${instrumentId}${note.id}`;\n        for (let i = 0, len = audioBuffers.length; i < len; i++) {\n          const nid = (i + bufferNid + 1) % len;\n          const cId = notesOn[nid];\n          if (cId && cId === instrumentNoteId) {\n            audioBuffers[nid].pause();\n            notesOn[nid] = null;\n            return;\n          }\n        }\n      }\n    };\n\n    midi.audioBuffers = audioBuffers;\n    midi.send = function (data, delay) {};\n    midi.setController = function (channel, type, value, delay) {};\n    midi.setVolume = function (channel, n) {\n      volume = n; // - should be channel specific volume\n    };\n\n    midi.programChange = function (channel, program) {\n      root.channels[channel].instrument = program;\n    };\n\n    midi.pitchBend = function (channel, program, delay) {};\n\n    midi.noteOn = function (channel, note, velocity, delay) {\n      const id = noteToKey[note];\n      if (!notes[id]) return;\n      if (delay) {\n        return setTimeout(function () {\n          playChannel(channel, id);\n        }, delay * 1000);\n      }\n      playChannel(channel, id);\n    };\n\n    midi.noteOff = function (channel, note, delay) {\n      /*\n       *      var id = noteToKey[note]\n       *      if (!notes[id]) return\n       *      if (delay) {\n       *        return setTimeout(function() {\n       *          stopChannel(channel, id)\n       *        }, delay * 1000)\n       *      } else {\n       *        stopChannel(channel, id)\n       *      }\n       */\n    };\n\n    midi.chordOn = function (channel, chord, velocity, delay) {\n      for (let idx = 0; idx < chord.length; idx++) {\n        const n = chord[idx];\n        var id = noteToKey[n];\n        if (!notes[id]) continue;\n        if (delay) {\n          return setTimeout(function () {\n            playChannel(channel, id);\n          }, delay * 1000);\n        }\n        playChannel(channel, id);\n      }\n    };\n\n    midi.chordOff = function (channel, chord, delay) {\n      for (let idx = 0; idx < chord.length; idx++) {\n        const n = chord[idx];\n        var id = noteToKey[n];\n        if (!notes[id]) continue;\n        if (delay) {\n          return setTimeout(function () {\n            stopChannel(channel, id);\n          }, delay * 1000);\n        }\n        stopChannel(channel, id);\n      }\n    };\n\n    midi.stopAllNotes = function () {\n      for (let nid = 0, { length } = audioBuffers; nid < length; nid++) {\n        audioBuffers[nid].pause();\n      }\n    };\n\n    midi.connect = function (opts) {\n      root.setDefaultPlugin(midi);\n      // /\n      for (const key in root.keyToNote) {\n        noteToKey[root.keyToNote[key]] = key;\n        notes[key] = { id: key };\n      }\n      // /\n      opts.onsuccess && opts.onsuccess();\n    };\n  })();\n","/*\n * ----------------------------------------------------------------------\n * Web MIDI API - Native Soundbanks\n * ----------------------------------------------------------------------\n * http://webaudio.github.io/web-midi-api/\n * ----------------------------------------------------------------------\n */\nimport root from '../root';\n\n(function () {\n  let plugin = null;\n  let output = null;\n  const midi = (root.WebMIDI = { api: 'webmidi' });\n  midi.send = function (data, delay) {\n    // set channel volume\n    output.send(data, delay * 1000);\n  };\n\n  midi.setController = function (channel, type, value, delay) {\n    output.send([channel, type, value], delay * 1000);\n  };\n\n  midi.setVolume = function (channel, volume, delay) {\n    // set channel volume\n    output.send([0xb0 + channel, 0x07, volume], delay * 1000);\n  };\n\n  midi.programChange = function (channel, program, delay) {\n    // change patch (instrument)\n    output.send([0xc0 + channel, program], delay * 1000);\n  };\n\n  midi.pitchBend = function (channel, program, delay) {\n    // pitch bend\n    output.send([0xe0 + channel, program], delay * 1000);\n  };\n\n  midi.noteOn = function (channel, note, velocity, delay) {\n    output.send([0x90 + channel, note, velocity], delay * 1000);\n  };\n\n  midi.noteOff = function (channel, note, delay) {\n    output.send([0x80 + channel, note, 0], delay * 1000);\n  };\n\n  midi.chordOn = function (channel, chord, velocity, delay) {\n    for (let n = 0; n < chord.length; n++) {\n      const note = chord[n];\n      output.send([0x90 + channel, note, velocity], delay * 1000);\n    }\n  };\n\n  midi.chordOff = function (channel, chord, delay) {\n    for (let n = 0; n < chord.length; n++) {\n      const note = chord[n];\n      output.send([0x80 + channel, note, 0], delay * 1000);\n    }\n  };\n\n  midi.stopAllNotes = function () {\n    output.cancel();\n    for (let channel = 0; channel < 16; channel++) {\n      output.send([0xb0 + channel, 0x7b, 0]);\n    }\n  };\n\n  midi.connect = function (opts) {\n    root.setDefaultPlugin(midi);\n    const errFunction = function (err) {\n      // well at least we tried!\n      if (window.AudioContext) {\n        // Chrome\n        opts.api = 'webaudio';\n      } else if (window.Audio) {\n        // Firefox\n        opts.api = 'audiotag';\n      } else {\n        // no support\n        return err;\n      }\n      root.loadPlugin(opts);\n    };\n    // /\n    navigator.requestMIDIAccess().then(function (access) {\n      plugin = access;\n      const pluginOutputs = plugin.outputs;\n      if (typeof pluginOutputs === 'function') {\n        // Chrome pre-43\n        output = pluginOutputs()[0];\n      } else {\n        // Chrome post-43\n        output = pluginOutputs[0];\n      }\n      if (output === undefined) {\n        // nothing there...\n        errFunction();\n      } else {\n        opts.onsuccess && opts.onsuccess();\n      }\n    }, errFunction);\n  };\n})();\n","import root from './root';\nimport './loader';\nimport './gm';\nimport './player';\nimport './plugins';\n\nwindow.MIDI = root;\nexport default root;\n"],"sourceRoot":""}